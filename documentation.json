{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-4b19d17b1896d49da55651fd82f83c73b51cb764530559bf12b991c33a5772cd203daaa517c451cf2fe42239198a1bd4601a8c83e877a5d18f0c2ec903f2238d",
            "file": "src/app/auth/auth.service.ts",
            "properties": [
                {
                    "name": "_userAuthState",
                    "defaultValue": "new Subject<firebase.User | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "userAuthState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "firebase.User | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "confirmPasswordReset",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emailSignIn",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<firebase.auth.UserCredential>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emailSignup",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<firebase.auth.UserCredential>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "forgotPassword",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "googleSignup",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<firebase.auth.UserCredential>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signUpWithMobile",
                    "args": [
                        {
                            "name": "mobNo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "recaptcha",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "mobNo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "recaptcha",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUserProfile",
                    "args": [
                        {
                            "name": "userDetails",
                            "type": "firebase.User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "displayName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userDetails",
                            "type": "firebase.User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "displayName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "verifyPasswordResetCode",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { updateProfile } from 'firebase/auth';\r\nimport firebase from 'firebase/compat/app';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  userAuthState!: firebase.User | null;\r\n  private _userAuthState = new Subject<firebase.User | null>();\r\n\r\n  constructor(private _fbAuth: AngularFireAuth) {\r\n    this._fbAuth\r\n      .authState\r\n      .subscribe((authState: firebase.User | null) => {\r\n        console.log('hitting firebase auth', authState);\r\n        if (authState) {\r\n          this.userAuthState = authState;\r\n          this._userAuthState.next(authState);\r\n        } else {\r\n          this.userAuthState = null;\r\n          this._userAuthState.next(null);\r\n        }\r\n      });\r\n  }\r\n\r\n  get userAuthState$(): Observable<firebase.User | null> {\r\n    return this._userAuthState.asObservable();\r\n  }\r\n\r\n  emailSignup(email: string, password: string): Promise<firebase.auth.UserCredential> {\r\n    return this._fbAuth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  async emailSignIn(email: string, password: string): Promise<firebase.auth.UserCredential> {\r\n    return await this._fbAuth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  async googleSignup(): Promise<firebase.auth.UserCredential> {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    return await this._fbAuth.signInWithPopup(provider);\r\n  }\r\n\r\n  signOut(): Promise<void> {\r\n    return this._fbAuth.signOut();\r\n  }\r\n\r\n  forgotPassword(email: string): Promise<void> {\r\n    return this._fbAuth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  async verifyPasswordResetCode(code: string): Promise<any> {\r\n    return await this._fbAuth.verifyPasswordResetCode(code)\r\n      .then(email => email)\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async confirmPasswordReset(code: string, newPassword: string): Promise<boolean> {\r\n    return await this._fbAuth.confirmPasswordReset(code, newPassword)\r\n      .then(() => true)\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  updateUserProfile(userDetails: firebase.User, displayName: string): void {\r\n    updateProfile(userDetails, { displayName })\r\n      .then(() => console.log('name updated!'))\r\n      .catch((err: any) => console.log(err));\r\n  }\r\n\r\n  async signUpWithMobile(mobNo: string, recaptcha: any): Promise<any> {\r\n    return await this._fbAuth.signInWithPhoneNumber(mobNo, recaptcha);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_fbAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_fbAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userAuthState$": {
                    "name": "userAuthState$",
                    "getSignature": {
                        "name": "userAuthState$",
                        "type": "",
                        "returnType": "Observable<firebase.User | null>",
                        "line": 31
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "FirestorageService",
            "id": "injectable-FirestorageService-8b2d333437598107bed83ad698bd514993a77a33dc1cf60e22530638379a71836beed91cccb01c1cdeed5a8eecaafca659d7040f1d3c991c617b59a7ffe4f7ab",
            "file": "src/app/shared/services/firestorage.service.ts",
            "properties": [
                {
                    "name": "tenantID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "deleteFileStorage",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFileURLFromUpload",
                    "args": [
                        {
                            "name": "imagePath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fileData",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<literal type | >",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "imagePath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fileData",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMultiImgUrl",
                    "args": [
                        {
                            "name": "imagePath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fileData",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "imgID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "imagePath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fileData",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "imgID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initializeApp",
                    "args": [
                        {
                            "name": "tenantID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tenantID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadFileToStorage",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AngularFireUploadTask>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/compat/storage';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestorageService {\r\n\r\n  private tenantID!: string;\r\n\r\n  constructor(\r\n    private afStorage: AngularFireStorage,\r\n  ) { }\r\n\r\n  async uploadFileToStorage(path: string, file: File): Promise<AngularFireUploadTask> {\r\n    return await this.afStorage.upload(`resImg/${this.tenantID}/${path}`, file);\r\n  }\r\n\r\n  deleteFileStorage(path: string): Observable<void> {\r\n    return this.afStorage.ref(`resImg/${this.tenantID}/${path}`).delete();\r\n  }\r\n\r\n  async getFileURLFromUpload<T>(imagePath: string, fileData: File): Promise<{ imgUrl: string; imgPath: string } | unknown> {\r\n    const imgUploadTask = await this.uploadFileToStorage(imagePath, fileData);\r\n    if (imgUploadTask) {\r\n      const imageDownloadURL = await imgUploadTask.ref.getDownloadURL();\r\n      if (imageDownloadURL) {\r\n        return {\r\n          imgUrl: imageDownloadURL,\r\n          imgPath: imagePath\r\n        } as unknown as T;\r\n      }\r\n    }\r\n  }\r\n\r\n  async getMultiImgUrl(imagePath: string, fileData: File, imgID: string): Promise<any> {\r\n    const imgUploadTask = await this.uploadFileToStorage(imagePath, fileData);\r\n    if (imgUploadTask) {\r\n      const imageDownloadURL = await imgUploadTask.ref.getDownloadURL();\r\n      if (imageDownloadURL) {\r\n        return {\r\n          imgUrl: imageDownloadURL,\r\n          imgPath: imagePath,\r\n          imgID\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  initializeApp(tenantID: string): void {\r\n    this.tenantID = tenantID;\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "afStorage",
                        "type": "AngularFireStorage",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "afStorage",
                        "type": "AngularFireStorage",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FirestoreService",
            "id": "injectable-FirestoreService-425c4d4ab6512df63acdd7a91575819e5f598bbd7e1151b3eeb2726e5e44816cf52a66d1f7dc5f5be996d9b8f45594d48d40b907ac33a5875c75723d43687e8e",
            "file": "src/app/shared/services/firestore.service.ts",
            "properties": [
                {
                    "name": "afs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularFirestore",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tenantID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "userAuthState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "firebase.User | null",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<DocumentReference<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "col",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "AngularFirestoreCollection<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "col$",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<[] | FirebaseError>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "colRoot",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "AngularFirestoreCollection<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "colRoot$",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<[] | FirebaseError>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "colWithIds$",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<[] | FirebaseError>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryFn",
                            "type": "QueryFn<firebase.firestore.DocumentData>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createID",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createWithID",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "doc",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AngularFirestoreDocument<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "doc$",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | FirebaseError>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "docRoot",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AngularFirestoreDocument<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "docRoot$",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | FirebaseError>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "docWithIds$",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | FirebaseError>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "executeWriteBatch",
                    "args": [
                        {
                            "name": "batch",
                            "type": "firebase.firestore.WriteBatch",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "batch",
                            "type": "firebase.firestore.WriteBatch",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "geopoint",
                    "args": [
                        {
                            "name": "lat",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "lng",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "firebase.firestore.GeoPoint",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lat",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lng",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initializeApp",
                    "args": [
                        {
                            "name": "tenantID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tenantID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "newWriteBatch",
                    "args": [],
                    "optional": false,
                    "returnType": "firebase.firestore.WriteBatch",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "timestamp",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "wait",
                    "args": [
                        {
                            "name": "ms",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ms",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { Action, AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument, DocumentChangeAction, DocumentReference, DocumentSnapshot, QueryFn } from '@angular/fire/compat/firestore';\r\nimport { FirebaseError } from 'firebase/app';\r\nimport firebase from 'firebase/compat/app';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FirestoreService {\r\n\r\n  userAuthState!: firebase.User | null;\r\n  private tenantID!: string;\r\n\r\n  constructor(\r\n    public afs: AngularFirestore,\r\n    private _fbAuth: AngularFireAuth,\r\n  ) {\r\n    this._fbAuth.authState\r\n      .subscribe((authState) => {\r\n        this.userAuthState = authState;\r\n      });\r\n  }\r\n\r\n  /// ****** Get a Reference ****** ///\r\n  col<T>(ref: string, queryFn?: QueryFn<firebase.firestore.DocumentData>): AngularFirestoreCollection<T> {\r\n    return this.afs.collection<T>(`app/${this.tenantID}/${ref}`, queryFn);\r\n  }\r\n\r\n  doc<T>(ref: string): AngularFirestoreDocument<T> {\r\n    return this.afs.doc<T>(`app/${this.tenantID}/${ref}`);\r\n  }\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  //  *** Get Data From Firestore ***\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  doc$<T>(ref: string): Observable<T | FirebaseError> {\r\n    return this.doc<T>(ref).snapshotChanges()\r\n      .pipe(\r\n        map((doc: Action<DocumentSnapshot<T>>) => doc.payload.data() as T),\r\n        catchError((err: FirebaseError) => of(err)),\r\n      );\r\n  }\r\n\r\n  col$<T>(ref: string, queryFn?: QueryFn<firebase.firestore.DocumentData>): Observable<T[] | FirebaseError> {\r\n    return this.col<T>(ref, queryFn)\r\n      .snapshotChanges().pipe(\r\n        map((docs: DocumentChangeAction<T>[]) =>\r\n          docs.map((a: DocumentChangeAction<T>) => a.payload.doc.data()) as T[]\r\n        ),\r\n        catchError((err: FirebaseError) => of(err)),\r\n      );\r\n  }\r\n\r\n  colRoot<T>(ref: string, queryFn?: QueryFn<firebase.firestore.DocumentData>): AngularFirestoreCollection<T> {\r\n    return this.afs.collection<T>(`${ref}`, queryFn);\r\n  }\r\n\r\n  docRoot<T>(ref: string): AngularFirestoreDocument<T> {\r\n    return this.afs.doc<T>(`${ref}`);\r\n  }\r\n\r\n  docRoot$<T>(ref: string): Observable<T | FirebaseError> {\r\n    return this.docRoot<T>(ref).snapshotChanges().pipe(\r\n      map((doc: Action<DocumentSnapshot<T>>) => doc.payload.data() as T),\r\n      catchError((err: FirebaseError) => of(err))\r\n    );\r\n  }\r\n\r\n  colRoot$<T>(ref: string, queryFn?: QueryFn<firebase.firestore.DocumentData>): Observable<T[] | FirebaseError> {\r\n    return this.colRoot<T>(ref, queryFn)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((docs: DocumentChangeAction<T>[]) => docs.map((a: DocumentChangeAction<T>) => a.payload.doc.data()) as T[]),\r\n        catchError((err: FirebaseError) => of(err))\r\n      );\r\n  }\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  //  *** Get Data From Firestore With IDs ***\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  docWithIds$<T>(ref: string): Observable<T | FirebaseError> {\r\n    return this.doc<T>(ref).snapshotChanges()\r\n      .pipe(\r\n        map((doc: Action<DocumentSnapshot<T>>) => ({\r\n          ...doc.payload.data() as T,\r\n          id: doc.payload.id\r\n        })),\r\n        catchError((err: FirebaseError) => of(err)),\r\n      );\r\n  }\r\n\r\n  colWithIds$<T>(ref: string, queryFn?: QueryFn<firebase.firestore.DocumentData>): Observable<T[] | FirebaseError> {\r\n    return this.col<T>(ref, queryFn).snapshotChanges()\r\n      .pipe(\r\n        map((actions: DocumentChangeAction<T>[]) =>\r\n          actions.map((a: DocumentChangeAction<T>) => {\r\n            const data = a.payload.doc.data();\r\n            const id = a.payload.doc.id;\r\n            return { id, ...data };\r\n          })\r\n        ),\r\n        catchError((err: FirebaseError) => of(err)),\r\n      );\r\n  }\r\n\r\n  newWriteBatch(): firebase.firestore.WriteBatch {\r\n    return this.afs.firestore.batch();\r\n  }\r\n\r\n  async executeWriteBatch(batch: firebase.firestore.WriteBatch): Promise<void> {\r\n    return await batch.commit();\r\n  }\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  //  *** Write Data ***\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  async createWithID<T>(ref: string, data: T): Promise<void> {\r\n    return await this.doc<T>(ref).set(data, { merge: true });\r\n  }\r\n\r\n  async add<T>(ref: string, data: T): Promise<DocumentReference<T>> {\r\n    return await this.col<T>(ref).add(data);\r\n  }\r\n\r\n  async update<T>(ref: string, data: T): Promise<void> {\r\n    return await this.doc<T>(ref).update(data);\r\n  }\r\n\r\n  async set<T>(ref: string, data: T): Promise<void> {\r\n    return await this.doc<T>(ref).set(data);\r\n  }\r\n\r\n  async delete<T>(ref: string): Promise<void> {\r\n    return await this.doc<T>(ref).delete();\r\n  }\r\n\r\n  // -----------------------------------------------------------------------------------------------------\r\n  //  *** Utility Functions ***\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  initializeApp(tenantID: string): void {\r\n    this.tenantID = tenantID;\r\n  }\r\n\r\n  geopoint(lat: number, lng: number): firebase.firestore.GeoPoint {\r\n    return new firebase.firestore.GeoPoint(lat, lng);\r\n  }\r\n\r\n  timestamp(): number {\r\n    return firebase.firestore.Timestamp.now().seconds * 1000;\r\n  };\r\n\r\n  createID(): string {\r\n    return this.afs.createId();\r\n  }\r\n\r\n  wait(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_fbAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "afs",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_fbAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AppResolver",
            "id": "injectable-AppResolver-6f323ccd5d59f010aa68cd2239720e7ed5af6c630b6d9360000cb564a4bed4d8e8b6fb3e778fa45d2d5918ab2281a3d14168d3b2b2ad488fa946412c0fa24324",
            "file": "src/app/app.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AngularFireAuth } from '@angular/fire/compat/auth';\r\n/* eslint-disable no-underscore-dangle */\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { FirestoreService } from './shared/services/firestore.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppResolver implements Resolve<boolean> {\r\n\r\n  constructor(\r\n    private _firestore: FirestoreService,\r\n    private _authService: AngularFireAuth\r\n  ) { }\r\n\r\n  resolve(): Observable<boolean> {\r\n    return this._authService\r\n      .authState\r\n      .pipe(\r\n        tap((authState) => {\r\n          console.log('authState:', authState);\r\n          this._firestore.initializeApp(authState?.uid as string);\r\n        }),\r\n        map((authState) => !!authState)\r\n      );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_firestore",
                        "type": "FirestoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_firestore",
                        "type": "FirestoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AccessDeniedPage",
            "id": "component-AccessDeniedPage-9eef0ac5eb21c83293e2df1a585269bc6ec35fdb3a64bd6b48087cb0128e99481e41e1513c697da80bf1423e082795dab10be60f12e07e0a060cf95daff91027",
            "file": "src/app/auth/pages/access-denied/access-denied.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-access-denied",
            "styleUrls": [
                "./access-denied.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./access-denied.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-access-denied',\r\n  templateUrl: './access-denied.page.html',\r\n  styleUrls: ['./access-denied.page.scss'],\r\n})\r\nexport class AccessDeniedPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./access-denied.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>access-denied</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "AddEntriesPage",
            "id": "component-AddEntriesPage-5cd66baaf6fc6186c2e9561b87d265cf71cb3b9df9b42ccff24ecdcb587424d145b464c913655d37f5fdb187575636388a513a51d9dd81dc19dce2be4bdd761f",
            "file": "src/app/pages/entries/add-entries/add-entries.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-add-entries",
            "styleUrls": [
                "./add-entries.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-entries.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modalController",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalController",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addExpense",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "addGoal",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "addIncome",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { AddExpensePage } from '../add-expense/add-expense.page';\r\nimport { AddIncomePage } from '../add-income/add-income.page';\r\nimport { AddGoalPage } from './../add-goal/add-goal.page';\r\n\r\n@Component({\r\n  selector: 'et-add-entries',\r\n  templateUrl: './add-entries.page.html',\r\n  styleUrls: ['./add-entries.page.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AddEntriesPage {\r\n\r\n  constructor(public modalController: ModalController) { }\r\n\r\n  async addExpense() {\r\n    const modal = await this.modalController.create({\r\n      component: AddExpensePage,\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async addIncome() {\r\n    const modal = await this.modalController.create({\r\n      component: AddIncomePage,\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async addGoal() {\r\n    const modal = await this.modalController.create({\r\n      component: AddGoalPage,\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wave {\r\n  position: relative;\r\n  background: var(--ion-color-light);\r\n  // &::before {\r\n  //   position: absolute;\r\n  //   content: url('/assets/images/svg2.png');\r\n  //   width: 100%;\r\n  //   height: 100px;\r\n  // }\r\n}\r\n\r\n.overview-swiper-wrapper {\r\n  ion-card {\r\n    min-height: 180px !important;\r\n  }\r\n}\r\n\r\n.latest-entries-list {\r\n  ion-button {\r\n    --background: rgba(var(--ion-color-secondary-rgb, 0, 0, 0), 0.5);\r\n  }\r\n}\r\n\r\n",
                    "styleUrl": "./add-entries.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button auto-hide=\"false\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Add</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div class=\"wave\">\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-card class=\"ion-text-center\"\r\n          style=\"min-height: 100px;\"\r\n          (click)=\"addIncome()\">\r\n          <ion-card-header class=\"ion-padding\">\r\n            <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n            <ion-card-subtitle class=\"ion-text-capitalize\">Add Income</ion-card-subtitle>\r\n          </ion-card-header>\r\n        </ion-card>\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-card class=\"ion-text-center\"\r\n          style=\"min-height: 100px;\"\r\n          (click)=\"addExpense()\">\r\n          <ion-card-header class=\"ion-padding\">\r\n            <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n            <ion-card-subtitle class=\"ion-text-capitalize\">Add Expense</ion-card-subtitle>\r\n          </ion-card-header>\r\n        </ion-card>\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-card class=\"ion-text-center\"\r\n          style=\"min-height: 100px;\"\r\n          (click)=\"addGoal()\">\r\n          <ion-card-header class=\"ion-padding\">\r\n            <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n            <ion-card-subtitle class=\"ion-text-capitalize\">Add Goal</ion-card-subtitle>\r\n          </ion-card-header>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-img src=\"/assets/images/svg.png\"></ion-img>\r\n  </div>\r\n\r\n  <ion-list class=\"latest-entries-list\">\r\n    <ion-item lines=\"none\">\r\n      <ion-label>\r\n        <b>Latest Entries</b>\r\n      </ion-label>\r\n      <ion-button slot=\"end\"\r\n        size=\"small\"\r\n        [routerLink]=\"['/entries-list']\">\r\n        <ion-icon name=\"ellipsis-horizontal-outline\"\r\n          color=\"secondary\"></ion-icon>\r\n      </ion-button>\r\n    </ion-item>\r\n\r\n    <ng-container *ngFor=\"let num of [].constructor(5)\">\r\n      <et-entries-view [name]=\"'Food'\"\r\n        [date]=\"'12/90/1990'\"\r\n        [paymentMethod]=\"'Google Pay'\">\r\n      </et-entries-view>\r\n    </ng-container>\r\n  </ion-list>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "AddExpensePage",
            "id": "component-AddExpensePage-f75ac455bc38d8ce57cdf4d17f25095634652c4c3a766a03b12ef71cfe0831665c26d5cf989a95aeea90e2f60760c4881edc0247efc4724a815cdcdb4a1f22aa",
            "file": "src/app/pages/entries/add-expense/add-expense.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-add-expense",
            "styleUrls": [
                "./add-expense.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-expense.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "expenseForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "modalController",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalController",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "expense",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup, NonNullableFormBuilder } from '@angular/forms';\r\nimport { ModalController } from '@ionic/angular';\r\n@Component({\r\n  selector: 'et-add-expense',\r\n  templateUrl: './add-expense.page.html',\r\n  styleUrls: ['./add-expense.page.scss'],\r\n})\r\nexport class AddExpensePage {\r\n  expenseForm!: FormGroup;\r\n\r\n  constructor(\r\n    private fb: NonNullableFormBuilder,\r\n    public modalController: ModalController,\r\n  ) {\r\n    this.expenseForm = this.fb.group({\r\n      date: this.fb.control(''),\r\n      title: this.fb.control(''),\r\n      amount: this.fb.control(null),\r\n    });\r\n\r\n    this.expenseForm.get('date')?.valueChanges\r\n      .subscribe((date) => {\r\n        // this.expenseForm.get('date')?.setValue(\r\n        //   new Date(date as string) as Date,\r\n        //   { emitEvent: false }\r\n        // );\r\n      });\r\n  }\r\n\r\n  expense() {\r\n    console.log(this.expenseForm.value);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".add-expense-list {\r\n  background: var(--ion-color-light);\r\n\r\n  ion-item {\r\n    margin-bottom: 10px;\r\n\r\n    ion-label {\r\n      font-size: 13px;\r\n      margin-bottom: 7px;\r\n      color: var(--ion-color-medium);\r\n    }\r\n\r\n    ion-text {\r\n      font-size: 13px;\r\n    }\r\n\r\n\r\n    ion-input {\r\n      font-size: 14px;\r\n      background: var(--ion-color-white);\r\n      --padding-start: 16px;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    ion-select {\r\n      font-size: 14px;\r\n      background: var(--ion-color-white);\r\n      --padding-start: 16px;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    .income-block {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      width: 100%;\r\n      background: var(--ion-color-white);\r\n    }\r\n\r\n    .photo-btn {\r\n      width: 99%;\r\n    }\r\n  }\r\n\r\n  .date-picker {\r\n    --ripple-color: transparent;\r\n\r\n    ion-datetime {\r\n      font-size: 14px;\r\n      --background: var(--ion-color-white);\r\n    }\r\n  }\r\n\r\n  .date-block {\r\n    background: var(--ion-color-white);\r\n    width: 100%;\r\n    padding: 8px 16px 8px 0;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n",
                    "styleUrl": "./add-expense.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Add Expense</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"modalController.dismiss()\">\r\n        <ion-icon slot=\"icon-only\"\r\n          name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content color=\"light\">\r\n  <form [formGroup]=\"expenseForm\">\r\n\r\n    <ion-list class=\"add-expense-list\">\r\n\r\n      <ion-item id=\"open-modal\"\r\n        lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Choose Date</ion-label>\r\n        <ion-input class=\"ion-text-start\"\r\n          [value]=\"(expenseForm.get('date')?.value | date: 'MMM d, yyyy')\"> </ion-input>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Expense Title</ion-label>\r\n        <ion-input formControlName=\"title\"></ion-input>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Amount</ion-label>\r\n        <ion-input formControlName=\"amount\"></ion-input>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Expense Category</ion-label>\r\n        <div>\r\n          <ion-button slot=\"start\"\r\n            fill=\"outline\"\r\n            color=\"dark\">\r\n            <ion-icon name=\"add\"\r\n              slot=\"icon-only\"></ion-icon>\r\n          </ion-button>\r\n          <ion-button slot=\"start\">Salary</ion-button>\r\n          <ion-button slot=\"start\">Rewards</ion-button>\r\n        </div>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Expense Resit Photo</ion-label>\r\n        <ion-button class=\"photo-btn\"\r\n          expand=\"block\"\r\n          fill=\"outline\"\r\n          color=\"medium\">\r\n          <ion-icon name=\"camera\"\r\n            slot=\"start\"></ion-icon>\r\n          Add Photo\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-modal trigger=\"open-modal\">\r\n      <ng-template>\r\n        <ion-content scrollY=\"false\">\r\n          <ion-datetime presentation=\"date\"\r\n            #datetimemodal\r\n            size=\"cover\"\r\n            formControlName=\"date\">\r\n            <span slot=\"title\">Select a Date</span>\r\n            <ion-buttons slot=\"buttons\">\r\n              <ion-button (click)=\"datetimemodal.cancel(true)\">\r\n                Dismiss\r\n              </ion-button>\r\n              <ion-button (click)=\"datetimemodal.confirm(true)\"\r\n                color=\"primary\">\r\n                Select\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-datetime>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n\r\n  </form>\r\n\r\n\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-toolbar>\r\n    <ion-button expand=\"block\"\r\n      (click)=\"expense()\">Add Expense</ion-button>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n"
        },
        {
            "name": "AddGoalPage",
            "id": "component-AddGoalPage-5eea31d5b789e0eb7452d6943fe44d23364152d090420f1a01b9283309fe2d35a7e0b6a8ee3af7c3174c34f23dcf6e403743dd165c58b5fdbafd725411b35dbf",
            "file": "src/app/pages/entries/add-goal/add-goal.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-add-goal",
            "styleUrls": [
                "./add-goal.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-goal.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "goalForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "modalController",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalController",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "modalDateChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | string[] | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | string[] | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup, NonNullableFormBuilder } from '@angular/forms';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { format, parseISO } from 'date-fns';\r\n\r\n@Component({\r\n  selector: 'et-add-goal',\r\n  templateUrl: './add-goal.page.html',\r\n  styleUrls: ['./add-goal.page.scss'],\r\n})\r\nexport class AddGoalPage {\r\n  goalForm: FormGroup;\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private fb: NonNullableFormBuilder\r\n  ) {\r\n    this.goalForm = this.fb.group({\r\n      name: this.fb.control('New car'),\r\n      amount: this.fb.control(0),\r\n      period: this.fb.control('yearly'),\r\n      date: this.fb.control(format(new Date(), 'MMM d, yyyy')),\r\n    });\r\n  }\r\n\r\n  modalDateChanged(value: string | string[] | null | undefined) {\r\n    this.goalForm.get('date')?.patchValue(format(parseISO(value as string), 'MMM d, yyyy'));\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".add-goal-list {\r\n  background: var(--ion-color-light);\r\n\r\n  ion-item {\r\n    margin-bottom: 10px;\r\n\r\n    ion-label {\r\n      font-size: 13px;\r\n      margin-bottom: 7px;\r\n      color: var(--ion-color-medium);\r\n    }\r\n\r\n    ion-text {\r\n      font-size: 13px;\r\n    }\r\n\r\n\r\n    ion-input {\r\n      font-size: 14px;\r\n      background: var(--ion-color-white);\r\n      --padding-start: 16px;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    ion-select {\r\n      font-size: 14px;\r\n      background: var(--ion-color-white);\r\n      --padding-start: 16px;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n\r\n  .date-block {\r\n    background: var(--ion-color-white);\r\n    width: 100%;\r\n    padding: 8px 16px 8px 0;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n",
                    "styleUrl": "./add-goal.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Add Goal</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"modalController.dismiss()\">\r\n        <ion-icon slot=\"icon-only\"\r\n          name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content color=\"light\">\r\n  <ion-list class=\"add-goal-list\"\r\n    [formGroup]=\"goalForm\">\r\n    <ion-item lines=\"none\"\r\n      color=\"light\">\r\n      <ion-label position=\"stacked\">Goal Title</ion-label>\r\n      <ion-input type=\"text\"\r\n        formControlName=\"name\"></ion-input>\r\n    </ion-item>\r\n\r\n    <ion-item lines=\"none\"\r\n      color=\"light\">\r\n      <ion-label position=\"stacked\">Amount</ion-label>\r\n      <ion-input type=\"number\"\r\n        formControlName=\"amount\"></ion-input>\r\n    </ion-item>\r\n\r\n    <ion-item color=\"light\"\r\n      lines=\"none\">\r\n      <ion-label [position]=\"'stacked'\">Contribution Type</ion-label>\r\n      <ion-select interface=\"action-sheet\"\r\n        formControlName=\"period\">\r\n        <ion-select-option value=\"yearly\">Yearly</ion-select-option>\r\n        <ion-select-option value=\"monthly\">Monthly</ion-select-option>\r\n        <ion-select-option value=\"weekly\">Weekly</ion-select-option>\r\n      </ion-select>\r\n    </ion-item>\r\n\r\n    <ion-item lines=\"none\"\r\n      color=\"light\"\r\n      id=\"open-modal\">\r\n      <ion-label position=\"stacked\">Choose Date</ion-label>\r\n      <ion-input class=\"ion-text-start\"\r\n        formControlName=\"date\"> </ion-input>\r\n    </ion-item>\r\n\r\n    <ion-modal trigger=\"open-modal\">\r\n      <ng-template>\r\n        <ion-content scrollY=\"false\">\r\n          <ion-datetime presentation=\"date\"\r\n            #datetimemodal\r\n            [value]=\"datetimemodal.value\"\r\n            size=\"cover\"\r\n            (ionChange)=\"modalDateChanged(datetimemodal.value)\">\r\n            <span slot=\"title\">Select a Date</span>\r\n            <ion-buttons slot=\"buttons\">\r\n              <ion-button (click)=\"datetimemodal.cancel(true)\">\r\n                Dismiss\r\n              </ion-button>\r\n              <ion-button (click)=\"datetimemodal.confirm(true)\"\r\n                color=\"primary\">\r\n                Select\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-datetime>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n\r\n  </ion-list>\r\n\r\n</ion-content>\r\n\r\n\r\n\r\n<ion-footer>\r\n  <ion-toolbar>\r\n    <ion-button expand=\"block\">Add Goal</ion-button>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n"
        },
        {
            "name": "AddIncomePage",
            "id": "component-AddIncomePage-40e16bb9eca6c3be34e63364bd4e183722dcd5398d398fb6cf9be00c7238a3a947f6d56c8bdaac7d86aa21141d917c444b8e3a3cb4b931a06bfd9bbdea0e46fc",
            "file": "src/app/pages/entries/add-income/add-income.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-add-income",
            "styleUrls": [
                "./add-income.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-income.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customActionSheetOptions",
                    "defaultValue": "{\r\n    header: 'Colors',\r\n    subHeader: 'Select your favorite color',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "incomeForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "modalController",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalController",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, NonNullableFormBuilder, Validators } from '@angular/forms';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { incomePath } from 'src/app/shared/constants/firepath.constant';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'et-add-income',\r\n  templateUrl: './add-income.page.html',\r\n  styleUrls: ['./add-income.page.scss'],\r\n})\r\nexport class AddIncomePage {\r\n\r\n  customActionSheetOptions = {\r\n    header: 'Colors',\r\n    subHeader: 'Select your favorite color',\r\n  };\r\n\r\n  incomeForm: FormGroup<{\r\n    date: FormControl<Date | string | null>;\r\n    title: FormControl<string>;\r\n    amount: FormControl<number | null>;\r\n  }>;\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private fb: NonNullableFormBuilder,\r\n    private _firestore: FirestoreService\r\n  ) {\r\n    this.incomeForm = this.fb.group({\r\n      date: this.fb.control(\r\n        null, Validators.required\r\n      ) as FormControl<Date | string | null>,\r\n      title: this.fb.control('', Validators.required),\r\n      amount: this.fb.control(null, Validators.required) as FormControl<number | null>,\r\n    });\r\n\r\n    this.incomeForm.get('date')?.valueChanges\r\n      .subscribe((date) => {\r\n        // this.incomeForm.get('date')?.setValue(\r\n        //   new Date(date as string) as Date,\r\n        //   { emitEvent: false }\r\n        // );\r\n      });\r\n  }\r\n\r\n  async submitForm() {\r\n    if (this.incomeForm.status === 'INVALID') {\r\n      return;\r\n    }\r\n    await this._firestore.add(incomePath, this.incomeForm.value);\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".add-income-list {\r\n  background: var(--ion-color-light);\r\n\r\n  ion-item {\r\n    margin-bottom: 10px;\r\n\r\n    ion-label {\r\n      font-size: 13px;\r\n      margin-bottom: 7px;\r\n      color: var(--ion-color-medium);\r\n    }\r\n\r\n    ion-text {\r\n      font-size: 13px;\r\n    }\r\n\r\n    ion-input {\r\n      font-size: 14px;\r\n      background: var(--ion-color-white);\r\n      --padding-start: 16px;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    ion-select {\r\n      font-size: 14px;\r\n      background: var(--ion-color-white);\r\n      --padding-start: 16px;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    .income-block {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      width: 100%;\r\n      background: var(--ion-color-white);\r\n    }\r\n  }\r\n\r\n  .date-picker {\r\n    --ripple-color: transparent;\r\n\r\n    ion-datetime {\r\n      font-size: 14px;\r\n      --background: var(--ion-color-white);\r\n    }\r\n  }\r\n\r\n  .date-block {\r\n    background: var(--ion-color-white);\r\n    width: 100%;\r\n    padding: 8px 16px 8px 0;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n",
                    "styleUrl": "./add-income.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_firestore",
                        "type": "FirestoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_firestore",
                        "type": "FirestoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Add Income</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"modalController.dismiss()\">\r\n        <ion-icon slot=\"icon-only\"\r\n          name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content color=\"light\">\r\n\r\n  <form [formGroup]=\"incomeForm\">\r\n\r\n    <ion-list class=\"add-income-list\">\r\n\r\n      <ion-item id=\"open-modal\"\r\n        lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Choose Date</ion-label>\r\n        <ion-input class=\"ion-text-start\"\r\n          [value]=\"(incomeForm.get('date')?.value | date: 'MMM d, yyyy')\"> </ion-input>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Income Title</ion-label>\r\n        <ion-input formControlName=\"title\"></ion-input>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Amount</ion-label>\r\n        <ion-input formControlName=\"amount\"\r\n          type=\"number\"></ion-input>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\"\r\n        color=\"light\">\r\n        <ion-label position=\"stacked\">Income Category</ion-label>\r\n        <div>\r\n          <ion-button slot=\"start\"\r\n            fill=\"outline\"\r\n            color=\"dark\">\r\n            <ion-icon name=\"add\"\r\n              slot=\"icon-only\"></ion-icon>\r\n          </ion-button>\r\n          <ion-button slot=\"start\">Salary</ion-button>\r\n          <ion-button slot=\"start\">Rewards</ion-button>\r\n        </div>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-label>Action Sheet</ion-label>\r\n        <ion-select [interfaceOptions]=\"customActionSheetOptions\"\r\n          interface=\"action-sheet\"\r\n          placeholder=\"Select One\">\r\n          <ion-select-option value=\"red\">Red</ion-select-option>\r\n          <ion-select-option value=\"green\">Green</ion-select-option>\r\n          <ion-select-option value=\"blue\">Blue</ion-select-option>\r\n        </ion-select>\r\n      </ion-item>\r\n\r\n    </ion-list>\r\n\r\n    <ion-modal trigger=\"open-modal\">\r\n      <ng-template>\r\n        <ion-content>\r\n          <ion-datetime presentation=\"date\"\r\n            #datetimemodal\r\n            size=\"cover\"\r\n            formControlName=\"date\">\r\n            <span slot=\"title\">Select a Date</span>\r\n            <ion-buttons slot=\"buttons\">\r\n              <ion-button (click)=\"datetimemodal.cancel(true)\">Dismiss</ion-button>\r\n              <ion-button (click)=\"datetimemodal.confirm(true)\"\r\n                color=\"primary\">Select</ion-button>\r\n            </ion-buttons>\r\n          </ion-datetime>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n\r\n  </form>\r\n\r\n</ion-content>\r\n\r\n\r\n<ion-footer>\r\n  <ion-toolbar>\r\n    <ion-button type=\"button\"\r\n      expand=\"block\"\r\n      (click)=\"submitForm()\">Add Income</ion-button>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2d5acb432a26655783a16b515061bc27494af52df5598d54e8f60d4411890fe0abbe94243ff34a5ff92bc2886e3632b12a7e8e7b3123d642ccf57d1ca9d9fa03",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<ion-app>\r\n  <ion-router-outlet></ion-router-outlet>\r\n</ion-app>\r\n"
        },
        {
            "name": "AuthPage",
            "id": "component-AuthPage-b6a6c9cddf74534b14a72fde1ed7532bcd55aed434ebf1b6f80270bd66deca0a5ab4478221b09fe0c5a20ae305be6f68bd13f2cdf3f9879379e2755cd9858e18",
            "file": "src/app/auth/auth.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<ion-router-outlet></ion-router-outlet>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <ion-router-outlet></ion-router-outlet>\r\n  `,\r\n})\r\nexport class AuthPage {\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatePickerComponent",
            "id": "component-DatePickerComponent-a0d0ed12b379a5862fb8324271a5572ca5173502d28068cdc9ef7c016ace2647311c1436b916a44e0398dccf5fec048a028a6cd86c56090ab76ec79e1037afa2",
            "file": "src/app/shared/components/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-date-picker",
            "styleUrls": [
                "./date-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modalController",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalController",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'et-date-picker',\r\n  templateUrl: './date-picker.component.html',\r\n  styleUrls: ['./date-picker.component.scss'],\r\n})\r\nexport class DatePickerComponent {\r\n\r\n  constructor(public modalController: ModalController) { }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./date-picker.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "modalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Choose Date</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"modalController.dismiss()\">\r\n        <ion-icon slot=\"icon-only\"\r\n          name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-datetime presentation=\"date\"\r\n  size=\"cover\"\r\n  #dateTime>\r\n</ion-datetime>\r\n\r\n<ion-footer>\r\n  <ion-toolbar>\r\n    <ion-button expand=\"block\">Select</ion-button>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n"
        },
        {
            "name": "EntriesListPage",
            "id": "component-EntriesListPage-327d7aa7d046abfd61daaad591fd2b66300a5639c0530e68ac552652a3d58830a18d9d22b3eda2e6f0dd47388c19e9524956fdb527a793cbad950f0f842ca68f",
            "file": "src/app/pages/entries/entries-list/entries-list.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-entries-list",
            "styleUrls": [
                "./entries-list.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entries-list.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-entries-list',\r\n  templateUrl: './entries-list.page.html',\r\n  styleUrls: ['./entries-list.page.scss'],\r\n})\r\nexport class EntriesListPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".entries-list {\r\n  ion-list-header {\r\n    ion-label {\r\n      font-size: 17px;\r\n    }\r\n  }\r\n\r\n  ion-item {\r\n    h6 {\r\n      font-size: 14px;\r\n    }\r\n\r\n    p {\r\n      font-size: 13px;\r\n      color: var(--ion-color-medium);\r\n    }\r\n\r\n    small {\r\n      font-size: 11px;\r\n    }\r\n\r\n\r\n  }\r\n}\r\n",
                    "styleUrl": "./entries-list.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Entries</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-list class=\"entries-list\">\r\n    <ion-list-header>\r\n      <ion-label><b>Latest Entries</b></ion-label>\r\n    </ion-list-header>\r\n\r\n    <ng-container *ngFor=\"let num of [].constructor(10);\">\r\n      <et-entries-view [name]=\"'lakshmi'\" [date]=\"'12/08/1990'\" [paymentMethod]=\"'googlemaps'\"></et-entries-view>\r\n    </ng-container>\r\n  </ion-list>\r\n</ion-content>\r\n"
        },
        {
            "name": "EntriesViewComponent",
            "id": "component-EntriesViewComponent-8a516cbd577b28206e613757c65d566d3b2cc8871a0ab6685f0d584f4647b090cbf5fb064de32a35ec572d232edbb988cd40510820454ba6f9c1257b1ae0144c",
            "file": "src/app/shared/components/entries-view/entries-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-entries-view",
            "styleUrls": [],
            "styles": [
                "\n    h6{\n      font-size:14px;\n    }\n    p{\n      font-size: 13px;\n    }"
            ],
            "template": "<ion-item (click)=\"entryClicked.emit()\" data-testid=\"entry-item\">\n  <ion-icon name=\"fast-food-outline\" slot=\"start\" size=\"small\"></ion-icon>\n  <ion-label>\n    <h6>\n      <b data-testid=\"entry-name\">{{name}}</b>\n    </h6>\n    <p data-testid=\"entry-date\">{{date}}</p>\n  </ion-label>\n  <ion-text class=\"ion-text-end\" slot=\"end\">\n    <p>\n      <ion-text color=\"dark\">-$200 + Vat 1%</ion-text>\n    </p>\n    <small>\n      <ion-text color=\"medium\" data-testid=\"entry-payment\">{{paymentMethod}}</ion-text>\n    </small>\n  </ion-text>\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "paymentMethod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "entryClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-entries-view',\r\n  template: `\r\n    <ion-item (click)=\"entryClicked.emit()\" data-testid=\"entry-item\">\r\n      <ion-icon name=\"fast-food-outline\" slot=\"start\" size=\"small\"></ion-icon>\r\n      <ion-label>\r\n        <h6>\r\n          <b data-testid=\"entry-name\">{{name}}</b>\r\n        </h6>\r\n        <p data-testid=\"entry-date\">{{date}}</p>\r\n      </ion-label>\r\n      <ion-text class=\"ion-text-end\" slot=\"end\">\r\n        <p>\r\n          <ion-text color=\"dark\">-$200 + Vat 1%</ion-text>\r\n        </p>\r\n        <small>\r\n          <ion-text color=\"medium\" data-testid=\"entry-payment\">{{paymentMethod}}</ion-text>\r\n        </small>\r\n      </ion-text>\r\n    </ion-item>\r\n  `,\r\n  styles: [\r\n    `\r\n    h6{\r\n      font-size:14px;\r\n    }\r\n    p{\r\n      font-size: 13px;\r\n    }`\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EntriesViewComponent {\r\n\r\n  @Input()\r\n  name!: string;\r\n\r\n  @Input()\r\n  date = '';\r\n\r\n  @Input()\r\n  paymentMethod!: string;\r\n\r\n  @Output()\r\n  entryClicked = new EventEmitter<void>();\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    h6{\n      font-size:14px;\n    }\n    p{\n      font-size: 13px;\n    }\n"
        },
        {
            "name": "ExpensePage",
            "id": "component-ExpensePage-db358f6395c00e52f18c889a59dd83ce8a3a1c3c9cdc0f6af318608f49f6e54895968e108142a20f34929347e02d8aee778ffe59359dcdc32809bfd9cbe3e3ff",
            "file": "src/app/pages/expense/expense.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-expense",
            "styleUrls": [
                "./expense.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expense.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coolTheme",
                    "defaultValue": "CoolTheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 146
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    title: {\r\n      text: 'Nightingale\\'s Rose Diagram',\r\n      subtext: 'Mocking Data',\r\n      x: 'center'\r\n    } as any,\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n    },\r\n    legend: {\r\n      x: 'center',\r\n      y: 'bottom',\r\n      data: ['rose1', 'rose2', 'rose3', 'rose4', 'rose5', 'rose6', 'rose7', 'rose8']\r\n    } as LegendComponentOption,\r\n    calculable: true,\r\n    series: [\r\n      {\r\n        name: 'area',\r\n        type: 'pie',\r\n        radius: [30, 110],\r\n        roseType: 'area',\r\n        data: [\r\n          { value: 10, name: 'rose1' },\r\n          { value: 5, name: 'rose2' },\r\n          { value: 15, name: 'rose3' },\r\n          { value: 25, name: 'rose4' },\r\n          { value: 20, name: 'rose5' },\r\n          { value: 35, name: 'rose6' },\r\n          { value: 30, name: 'rose7' },\r\n          { value: 40, name: 'rose8' }\r\n        ]\r\n      }\r\n    ]\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "segmentModel",
                    "defaultValue": "'spends'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | ThemeOption",
                    "optional": false,
                    "description": "",
                    "line": 145
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { EChartsOption, LegendComponentOption } from 'echarts';\r\nimport { ThemeOption } from 'ngx-echarts';\r\n\r\nexport const CoolTheme = {\r\n  color: [\r\n    '#b21ab4',\r\n    '#6f0099',\r\n    '#2a2073',\r\n    '#0b5ea8',\r\n    '#17aecc',\r\n    '#b3b3ff',\r\n    '#eb99ff',\r\n    '#fae6ff',\r\n    '#e6f2ff',\r\n    '#eeeeee'\r\n  ],\r\n\r\n  title: {\r\n    textStyle: {\r\n      fontWeight: 'normal',\r\n      color: '#00aecd'\r\n    }\r\n  },\r\n\r\n  visualMap: {\r\n    color: ['#00aecd', '#a2d4e6']\r\n  },\r\n\r\n  toolbox: {\r\n    color: ['#00aecd', '#00aecd', '#00aecd', '#00aecd']\r\n  },\r\n\r\n  tooltip: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    axisPointer: {\r\n      // Axis indicator, coordinate trigger effective\r\n      type: 'line', // The default is a straight line： 'line' | 'shadow'\r\n      lineStyle: {\r\n        // Straight line indicator style settings\r\n        color: '#00aecd',\r\n        type: 'dashed'\r\n      },\r\n      crossStyle: {\r\n        color: '#00aecd'\r\n      },\r\n      shadowStyle: {\r\n        // Shadow indicator style settings\r\n        color: 'rgba(200,200,200,0.3)'\r\n      }\r\n    }\r\n  },\r\n\r\n  // Area scaling controller\r\n  dataZoom: {\r\n    dataBackgroundColor: '#eee', // Data background color\r\n    fillerColor: 'rgba(144,197,237,0.2)', // Fill the color\r\n    handleColor: '#00aecd' // Handle color\r\n  },\r\n\r\n  timeline: {\r\n    lineStyle: {\r\n      color: '#00aecd'\r\n    },\r\n    controlStyle: {\r\n      color: '#00aecd',\r\n      borderColor: '00aecd'\r\n    }\r\n  },\r\n\r\n  candlestick: {\r\n    itemStyle: {\r\n      color: '#00aecd',\r\n      color0: '#a2d4e6'\r\n    },\r\n    lineStyle: {\r\n      width: 1,\r\n      color: '#00aecd',\r\n      color0: '#a2d4e6'\r\n    },\r\n    areaStyle: {\r\n      color: '#b21ab4',\r\n      color0: '#0b5ea8'\r\n    }\r\n  },\r\n\r\n  chord: {\r\n    padding: 4,\r\n    itemStyle: {\r\n      color: '#b21ab4',\r\n      borderWidth: 1,\r\n      borderColor: 'rgba(128, 128, 128, 0.5)'\r\n    },\r\n    lineStyle: {\r\n      color: 'rgba(128, 128, 128, 0.5)'\r\n    },\r\n    areaStyle: {\r\n      color: '#0b5ea8'\r\n    }\r\n  },\r\n\r\n  graph: {\r\n    itemStyle: {\r\n      color: '#b21ab4'\r\n    },\r\n    linkStyle: {\r\n      color: '#2a2073'\r\n    }\r\n  },\r\n\r\n  map: {\r\n    itemStyle: {\r\n      color: '#c12e34'\r\n    },\r\n    areaStyle: {\r\n      color: '#ddd'\r\n    },\r\n    label: {\r\n      color: '#c12e34'\r\n    }\r\n  },\r\n\r\n  gauge: {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: [\r\n          [0.2, '#dddddd'],\r\n          [0.8, '#00aecd'],\r\n          [1, '#f5ccff']\r\n        ],\r\n        width: 8\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'et-expense',\r\n  templateUrl: './expense.page.html',\r\n  styleUrls: ['./expense.page.scss'],\r\n})\r\nexport class ExpensePage {\r\n  segmentModel = 'spends';\r\n  theme!: string | ThemeOption;\r\n  coolTheme = CoolTheme;\r\n  options: EChartsOption = {\r\n    title: {\r\n      text: 'Nightingale\\'s Rose Diagram',\r\n      subtext: 'Mocking Data',\r\n      x: 'center'\r\n    } as any,\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n    },\r\n    legend: {\r\n      x: 'center',\r\n      y: 'bottom',\r\n      data: ['rose1', 'rose2', 'rose3', 'rose4', 'rose5', 'rose6', 'rose7', 'rose8']\r\n    } as LegendComponentOption,\r\n    calculable: true,\r\n    series: [\r\n      {\r\n        name: 'area',\r\n        type: 'pie',\r\n        radius: [30, 110],\r\n        roseType: 'area',\r\n        data: [\r\n          { value: 10, name: 'rose1' },\r\n          { value: 5, name: 'rose2' },\r\n          { value: 15, name: 'rose3' },\r\n          { value: 25, name: 'rose4' },\r\n          { value: 20, name: 'rose5' },\r\n          { value: 35, name: 'rose6' },\r\n          { value: 30, name: 'rose7' },\r\n          { value: 40, name: 'rose8' }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-list {\r\n  .date-picker {\r\n    --ripple-color: var(--ion-color-white);\r\n\r\n    ion-datetime {\r\n      width: 100%;\r\n      font-size: 14px;\r\n      --background: var(--ion-color-white);\r\n    }\r\n  }\r\n}\r\n\r\n.expense-list {\r\n  ion-card {\r\n    .total {\r\n      background: var(--ion-color-secondary);\r\n      color: var(--ion-color-white);\r\n      width: 80px;\r\n      height: 80px;\r\n      border-radius: 50%;\r\n      box-shadow: 0px 0px 5px 8px rgba(var(--ion-color-secondary-rgb, 0, 0, 0), 0.5);\r\n      margin: 10px auto;\r\n      line-height: 80px;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  ion-item {\r\n    h6 {\r\n      font-size: 14px;\r\n    }\r\n\r\n    p {\r\n      font-size: 13px;\r\n      color: var(--ion-color-medium);\r\n    }\r\n\r\n    small {\r\n      font-size: 11px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./expense.page.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button auto-hide=\"false\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Total Expenses</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-list class=\"expense-list\">\r\n    <ion-item class=\"date-picker\"\r\n      lines=\"none\">\r\n      <ion-datetime presentation=\"date\"></ion-datetime>\r\n    </ion-item>\r\n\r\n    <ion-card class=\"ion-padding-vertical ion-text-center\">\r\n      <div class=\"total\">\r\n        <ion-text>$1800</ion-text>\r\n      </div>\r\n      <ion-card-content>\r\n        You have Spend total 60% of you budget\r\n      </ion-card-content>\r\n    </ion-card>\r\n  </ion-list>\r\n\r\n  <ion-segment value=\"variations\"\r\n    scrollable=\"true\"\r\n    mode=\"md\"\r\n    [(ngModel)]=\"segmentModel\">\r\n    <ion-segment-button value=\"spends\">\r\n      <ion-label>Spends</ion-label>\r\n    </ion-segment-button>\r\n    <ion-segment-button value=\"categories\">\r\n      <ion-label>Categories</ion-label>\r\n    </ion-segment-button>\r\n  </ion-segment>\r\n\r\n  <ion-list class=\"expense-list\"\r\n    *ngIf=\"segmentModel === 'spends'\">\r\n    <ion-item *ngFor=\"let num of [].constructor(3);\">\r\n      <ion-icon name=\"fast-food-outline\"\r\n        slot=\"start\"\r\n        size=\"small\"></ion-icon>\r\n      <ion-label>\r\n        <h6><b>Food</b></h6>\r\n        <p>20 Feb 2020</p>\r\n      </ion-label>\r\n      <ion-text class=\"ion-text-end\"\r\n        slot=\"end\">\r\n        <p>\r\n          <ion-text color=\"dark\">-$200 + Vat 1%</ion-text>\r\n        </p>\r\n        <small>\r\n          <ion-text color=\"medium\">\r\n            Google Pay\r\n          </ion-text>\r\n        </small>\r\n      </ion-text>\r\n    </ion-item>\r\n  </ion-list>\r\n\r\n  <ion-list class=\"expense-list\"\r\n    *ngIf=\"segmentModel === 'categories'\">\r\n    <div echarts\r\n      [options]=\"options\"\r\n      [theme]=\"theme\"\r\n      class=\"demo-chart\"></div>\r\n  </ion-list>\r\n</ion-content>\r\n"
        },
        {
            "name": "ForgotPasswordPage",
            "id": "component-ForgotPasswordPage-21ece365c2fc0fe1445ae8d6fd3e172dd410891a607ae966db844617ff6ed349d25b7a56bca9ae469932a21422259781115f154569cdb3a2b718fd36435a2bbd",
            "file": "src/app/auth/pages/forgot-password/forgot-password.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-forgot-password",
            "styleUrls": [
                "./forgot-password.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forgot-password.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./forgot-password.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>forgot-password</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "GoalsPage",
            "id": "component-GoalsPage-ddc2cbc30bfb72c7a2917253b42010901617d88ce324c10731c05bc872b6f05c48abd2b324a49ac4a2ea1ff88514db67c9d897be5f5b5b2f03af4cf5d2572c0e",
            "file": "src/app/pages/goals/goals.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-goals",
            "styleUrls": [
                "./goals.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./goals.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-goals',\r\n  templateUrl: './goals.page.html',\r\n  styleUrls: ['./goals.page.scss'],\r\n})\r\nexport class GoalsPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./goals.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>goals</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n  <!-- ------- routing issue------ -->\r\n  <!-- <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" size=\"small\" edge [routerLink]=\"\r\n    ['/add-goal']\">\r\n    <ion-fab-button size=\"small\">\r\n      <ion-icon name=\"add\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab> -->\r\n</ion-content>\r\n"
        },
        {
            "name": "HomePage",
            "id": "component-HomePage-1ad1ba179674df84b95906d4b05ad4cac9076b3833c2b71e08b7ffa5e127ff156b8286397cbea9fd771b1fc15f3410ee6a62f6b3a3c92cfafd103d5f67c82f8d",
            "file": "src/app/home/home.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-home",
            "styleUrls": [
                "home.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "home.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "swiper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SwiperComponent",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'swiper'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport SwiperCore, { Autoplay, Pagination } from 'swiper';\r\nimport { SwiperComponent } from 'swiper/angular';\r\nSwiperCore.use([Pagination, Autoplay]);\r\n@Component({\r\n  selector: 'et-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n})\r\nexport class HomePage {\r\n  @ViewChild('swiper') swiper!: SwiperComponent;\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#container {\r\n  text-align: center;\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n#container strong {\r\n  font-size: 20px;\r\n  line-height: 26px;\r\n}\r\n\r\n#container p {\r\n  font-size: 16px;\r\n  line-height: 22px;\r\n\r\n  color: #8c8c8c;\r\n\r\n  margin: 0;\r\n}\r\n\r\n#container a {\r\n  text-decoration: none;\r\n}\r\n\r\n\r\n.swiper {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.swiper-slide {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n\r\nion-img {\r\n  height: 150px;\r\n  object-fit: contain;\r\n}\r\n",
                    "styleUrl": "home.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<!-- <ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-title>\r\n      Blank\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <!-- <ion-header collapse=\"condense\">\r\n    <ion-toolbar>\r\n      <ion-title size=\"large\">Blank</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <h1>swiper</h1> -->\r\n\r\n<!-- <swiper #swiper>\r\n    <ng-template swiperSlide>Slide 1</ng-template>\r\n    <ng-template swiperSlide>Slide 2</ng-template>\r\n    <ng-template swiperSlide>Slide 3</ng-template>\r\n  </swiper> -->\r\n<ion-content [fullscreen]=\"true\">\r\n  <swiper [autoplay]=\"true\" [pagination]=\"true\" [loop]=\"true\">\r\n    <ng-template swiperSlide>\r\n      <ion-img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSc2oCtU1N2NxFf40X1FawnG9KBaz54fQ7vw&usqp=CAU\">\r\n      </ion-img>\r\n    </ng-template>\r\n    <ng-template swiperSlide>\r\n      <ion-img src=\"https://icons-for-free.com/download-icon-food+icon-1320184414775447246_512.png\">\r\n      </ion-img>\r\n    </ng-template>\r\n    <ng-template swiperSlide>\r\n      <ion-img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Food_Bank_icon.svg/2048px-Food_Bank_icon.svg.png\">\r\n      </ion-img>\r\n    </ng-template>\r\n  </swiper>\r\n\r\n\r\n\r\n\r\n  <div class=\"ion-hide\">\r\n    <div id=\"container\">\r\n      <h1 class=\"text-3xl font-bold underline  bg-black\">\r\n        Hello world!\r\n      </h1>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <input class=\"border-2 border-rose-600 ...\">\r\n\r\n      <br />\r\n      <br />\r\n      <div class=\"bg-origin-border p-4 border-4 border-dashed ...\"\r\n        style=\"background-image: url('https://codecanyon.img.customer.envatousercontent.com/files/344456479/590x300_preview.jpg?auto=compress%2Cformat&fit=crop&crop=top&w=590&h=300&s=bfe2c06f9fdc7ea6e77ff35a1da71811')\">\r\n      </div>\r\n\r\n      <br />\r\n      <div class=\"divide-y divide-dashed\">\r\n        <div>01</div>\r\n        <div>02</div>\r\n        <div>03</div>\r\n      </div>\r\n      <strong>Ready to create an app?</strong>\r\n      <p>Start with Ionic <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n          href=\"https://ionicframework.com/docs/components\">UI\r\n          Components</a></p>\r\n    </div>\r\n    <div class=\"shadow-md ...\">\r\n      sdsd\r\n    </div>\r\n    <button class=\"... ring-2 ring-blue-500\">\r\n      Create account\r\n    </button>\r\n    <table class=\"table-auto\">\r\n      <thead>\r\n        <tr>\r\n          <th>Song</th>\r\n          <th>Artist</th>\r\n          <th>Year</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>The Sliding Mr. Bones (Next Stop, Pottersville)</td>\r\n          <td>Malcolm Lockyer</td>\r\n          <td>1961</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Witchy Woman</td>\r\n          <td>The Eagles</td>\r\n          <td>1972</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Shining Star</td>\r\n          <td>Earth, Wind, and Fire</td>\r\n          <td>1975</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</ion-content> -->\r\n"
        },
        {
            "name": "IncomePage",
            "id": "component-IncomePage-cf32b1e049c4f861ab948b1d434c11431ad70d7f7a117d8c7a72795b0334c43b08726c490d5458d9a60a5d11239e299814e7d34805064f09ef59ac42e8bdc0e1",
            "file": "src/app/pages/income/income.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-income",
            "styleUrls": [
                "./income.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./income.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'et-income',\r\n    templateUrl: './income.page.html',\r\n    styleUrls: ['./income.page.scss'],\r\n})\r\nexport class IncomePage implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./income.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>income</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "LoginPage",
            "id": "component-LoginPage-c0552c44a84200bf184214e48e77b2113042d797260b7692ca282f61a30be5ade043a61a4d4380809ac5d496c83523af83362a295f2fbf07e4c7d90b6cc05a37",
            "file": "src/app/auth/pages/login/login.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-login",
            "styleUrls": [
                "./login.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ismyTextFieldType",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "signInWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AngularFirestore } from '@angular/fire/compat/firestore';\r\n/* eslint-disable no-underscore-dangle */\r\nimport { Component } from '@angular/core';\r\nimport { FirebaseError } from '@angular/fire/app';\r\nimport { FormControl, FormGroup, NonNullableFormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { appPath } from 'src/app/shared/constants/firepath.constant';\r\nimport { FirestoreService } from 'src/app/shared/services/firestore.service';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'et-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage {\r\n\r\n  ismyTextFieldType = false;\r\n  loginForm: FormGroup<{\r\n    email: FormControl<string>;\r\n    password: FormControl<string>;\r\n  }>;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _authService: AuthService,\r\n    private _firestore: FirestoreService,\r\n    private _fbDB: AngularFirestore,\r\n    private _fb: NonNullableFormBuilder,\r\n  ) {\r\n    this.loginForm = this._fb.group({\r\n      email: this._fb.control('balajibalamurugan236@gmail.com'),\r\n      password: this._fb.control('123456'),\r\n    });\r\n  }\r\n\r\n  async signInWithGoogle(): Promise<void> {\r\n    try {\r\n      const { user } = await this._authService.googleSignup();\r\n      console.log(user);\r\n      if (user) {\r\n        this._router.navigate(['/overview']);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async signIn(): Promise<void> {\r\n    const { email, password } = this.loginForm.value;\r\n    try {\r\n      const { user } = await this._authService.emailSignIn(\r\n        email as string,\r\n        password as string\r\n      );\r\n      console.log(user);\r\n      if (user) {\r\n        try {\r\n          await this._firestore.colRoot(appPath)\r\n            .doc(user.uid)\r\n            .set({\r\n              email: user.email,\r\n              name: user.displayName\r\n            });\r\n          this._router.navigate(['/overview']);\r\n        } catch (err: any) {\r\n          console.error(err.code as FirebaseError);\r\n        }\r\n      }\r\n    } catch (err: any) {\r\n      console.error(err.code as FirebaseError);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-header ion-toolbar {\r\n  --background: transparent;\r\n}\r\n\r\n.login-list {\r\n  background: var(--ion-color-light);\r\n\r\n  ion-list-header {\r\n    ion-label {\r\n      margin-top: 0;\r\n    }\r\n  }\r\n\r\n  .social-login-button {\r\n    ion-button {\r\n      margin-top: 8px;\r\n      font-size: 13px;\r\n    }\r\n\r\n    .social-name {\r\n      // flex: 1;\r\n      margin-left: 16px;\r\n    }\r\n\r\n    ion-img {\r\n      height: 25px;\r\n      background: #fff;\r\n      padding: 5px;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n\r\n  .sub-line {\r\n    position: relative;\r\n    font-size: 12px;\r\n    color: var(--ion-color-medium);\r\n    text-align: center;\r\n  }\r\n\r\n  .social-login-wrapper {\r\n    ion-item {\r\n      --padding-start: 0;\r\n      --inner-padding-end: 0;\r\n\r\n      ion-label {\r\n        font-size: 13px;\r\n      }\r\n\r\n      ion-input {\r\n        font-size: 13px;\r\n        --background: var(--ion-color-white);\r\n        --padding-start: 16px;\r\n      }\r\n    }\r\n\r\n    .number-block {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-evenly;\r\n      width: 100%;\r\n      background: var(--ion-color-white);\r\n      padding-right: 10px;\r\n\r\n      ion-button {\r\n        --border-radius: 0;\r\n        height: 37px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (min-width: 767px) {\r\n  .sub-line::before {\r\n    width: 37%;\r\n  }\r\n\r\n  .sub-line::after {\r\n    width: 37%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./login.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_firestore",
                        "type": "FirestoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_fbDB",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_firestore",
                        "type": "FirestoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_fbDB",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_fb",
                        "type": "NonNullableFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-content color=\"light\">\r\n  <ion-grid class=\"main-grid\">\r\n    <ion-list class=\"login-list ion-margin\">\r\n      <ion-list-header class=\"ion-text-center ion-margin-bottom ion-padding-bottom\">\r\n        <ion-label>Expense Tracker</ion-label>\r\n      </ion-list-header>\r\n\r\n      <div class=\"social-login-wrapper ion-margin-top\">\r\n        <ng-container [formGroup]=\"loginForm\">\r\n          <ion-item class=\"ion-margin-bottom\"\r\n            color=\"light\"\r\n            lines=\"none\"\r\n            mode=\"ios\">\r\n            <ion-label color=\"medium\"\r\n              position=\"stacked\">Email</ion-label>\r\n            <ion-input placeholder=\"Your email or phone\"\r\n              type=\"email\"\r\n              formControlName=\"email\"></ion-input>\r\n          </ion-item>\r\n\r\n          <ion-item color=\"light\"\r\n            lines=\"none\"\r\n            mode=\"ios\">\r\n            <ion-label color=\"medium\"\r\n              position=\"stacked\">Password</ion-label>\r\n            <div class=\"number-block\">\r\n              <ion-input placeholder=\"Password\"\r\n                type=\"number\"\r\n                [type]=\"ismyTextFieldType ? 'text' : 'password'\"\r\n                formControlName=\"password\">\r\n              </ion-input>\r\n              <ion-button class=\"ion-no-margin\"\r\n                slot=\"end\"\r\n                color=\"white\"\r\n                (click)=\"ismyTextFieldType = !ismyTextFieldType\">\r\n                <ion-icon slot=\"end\"\r\n                  color=\"medium\"\r\n                  size=\"small\"\r\n                  [name]=\"ismyTextFieldType ? 'eye-off' : 'eye'\">\r\n                </ion-icon>\r\n              </ion-button>\r\n            </div>\r\n          </ion-item>\r\n        </ng-container>\r\n\r\n        <br />\r\n        <ion-button class=\"ion-margin-top\"\r\n          expand=\"block\"\r\n          (click)=\"signIn()\"\r\n          type=\"button\">\r\n          Sign In\r\n        </ion-button>\r\n\r\n        <div class=\"social-login-button ion-margin-top\">\r\n          <ion-button class=\"ion-margin-bottom\"\r\n            color=\"white\"\r\n            expand=\"block\"\r\n            (click)=\"signInWithGoogle()\">\r\n            <ion-img src=\"/assets/images/search.svg\"></ion-img>\r\n            <span class=\"social-name\">Login with Gmail</span>\r\n          </ion-button>\r\n        </div>\r\n\r\n        <ion-button class=\"ion-margin-top\"\r\n          color=\"medium\"\r\n          fill=\"clear\"\r\n          expand=\"block\"\r\n          type=\"button\">\r\n          Forgot your password?\r\n        </ion-button>\r\n\r\n      </div>\r\n    </ion-list>\r\n  </ion-grid>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-toolbar class=\"ion-text-center\">\r\n    <ion-note color=\"medium\">\r\n      Don't have an account? <ion-text class=\"pointer\"\r\n        color=\"dark\">Sign up</ion-text>\r\n    </ion-note>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n"
        },
        {
            "name": "LogoutPage",
            "id": "component-LogoutPage-ac2db166a7659c2aeff60adca0123ba01d680ffc3941b047603b0e38a4ec418dd983d8966289ca082cf8cd18fc7a9977070d59334ddc9ae543d7c719086bb3fd",
            "file": "src/app/auth/pages/logout/logout.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./logout.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './logout.page.html',\r\n})\r\nexport class LogoutPage implements OnInit {\r\n\r\n  constructor(private _authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    setTimeout(async () => {\r\n      await this._authService.signOut();\r\n      console.log('you are signed out!');\r\n    }, 1200);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "_authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>logout</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "OverviewPage",
            "id": "component-OverviewPage-c972e05b8b190b84d854bed6bd6d620bde0375f35c760cb2e72442542195ecbf32633db51ced6aa05d8388a8007b65b5578505d06abc539078e3f668f243e3f6",
            "file": "src/app/pages/overview/overview.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-overview",
            "styleUrls": [
                "./overview.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./overview.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-overview',\r\n  templateUrl: './overview.page.html',\r\n  styleUrls: ['./overview.page.scss'],\r\n})\r\nexport class OverviewPage implements OnInit {\r\n  data = [];\r\n  categories: any[] = [];\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.http.get('./assets/data/db.json')\r\n      .subscribe((res: any) => {\r\n        this.data = res;\r\n        this.categories = res.categories;\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wave {\r\n  position: relative;\r\n  background: var(--ion-color-light);\r\n  // &::before {\r\n  //   position: absolute;\r\n  //   content: url('/assets/images/svg2.png');\r\n  //   width: 100%;\r\n  //   height: 100px;\r\n  // }\r\n}\r\n\r\n\r\n.overview-swiper-wrapper {\r\n  ion-card {\r\n    min-height: 145px !important;\r\n    min-width: 100px !important;\r\n    box-shadow: none;\r\n    border-radius: 10px;\r\n\r\n    ion-card-subtitle {\r\n      font-size: 12px;\r\n    }\r\n\r\n    ion-card-content {\r\n      color: var(--ion-color-dark);\r\n    }\r\n  }\r\n\r\n  .select {\r\n    background: var(--ion-color-secondary);\r\n\r\n    ion-icon,\r\n    ion-card-subtitle,\r\n    ion-card-content {\r\n      color: var(--ion-color-white);\r\n    }\r\n  }\r\n}\r\n\r\n.overview-category-wrapper {\r\n  ion-card {\r\n    border-radius: 10px;\r\n\r\n    ion-card-subtitle {\r\n      font-size: 12px;\r\n    }\r\n\r\n    ion-card-content {\r\n      color: var(--ion-color-dark);\r\n    }\r\n  }\r\n}\r\n\r\n.latest-entries-list {\r\n  ion-button {\r\n    --background: rgba(var(--ion-color-primary-rgb, 0, 0, 0), 0.5);\r\n  }\r\n}\r\n",
                    "styleUrl": "./overview.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Overview</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div class=\"wave ion-padding-vertical\">\r\n    <swiper class=\"overview-swiper-wrapper\"\r\n      [spaceBetween]=\"0\"\r\n      [slidesPerView]=\"2.5\">\r\n      <ng-template swiperSlide>\r\n        <ion-card class=\"ion-text-start ion-no-margin ion-margin-top\">\r\n          <ion-card-header class=\"ion-padding\">\r\n            <ion-icon name=\"card-outline\"></ion-icon>\r\n            <ion-card-subtitle class=\"ion-text-capitalize ion-no-margin\"\r\n              color=\"medium\">Total Salary</ion-card-subtitle>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-padding\">\r\n            <h6 color=\"dark\"><b>$</b></h6>\r\n            <p color=\"dark\"><b>1800.00</b></p>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ng-template>\r\n\r\n      <ng-template swiperSlide>\r\n        <ion-card class=\"ion-text-start ion-no-margin ion-margin-top select\"\r\n          [routerLink]=\"['/expense']\">\r\n          <ion-card-header class=\"ion-padding\">\r\n            <ion-icon name=\"card-outline\"></ion-icon>\r\n            <ion-card-subtitle class=\"ion-text-capitalize ion-no-margin\"\r\n              color=\"medium\">Total Expense\r\n            </ion-card-subtitle>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-padding\">\r\n            <h6 color=\"dark\"><b>$</b></h6>\r\n            <p color=\"dark\"><b>1800.00</b></p>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ng-template>\r\n\r\n      <ng-template swiperSlide>\r\n        <ion-card class=\"ion-text-start ion-no-margin ion-margin-top\">\r\n          <ion-card-header class=\"ion-padding\">\r\n            <ion-icon name=\"card-outline\"></ion-icon>\r\n            <ion-card-subtitle class=\"ion-text-capitalize ion-no-margin\"\r\n              color=\"medium\">Monthly Expense\r\n            </ion-card-subtitle>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-padding\">\r\n            <h6 color=\"dark\"><b>$</b></h6>\r\n            <p color=\"dark\"><b>1800.00</b></p>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ng-template>\r\n    </swiper>\r\n\r\n    <ion-img src=\"../../../assets/images/svg.png\"></ion-img>\r\n  </div>\r\n\r\n  <swiper class=\"overview-category-wrapper\"\r\n    [slidesPerView]=\"3\"\r\n    [spaceBetween]=\"10\">\r\n\r\n    <ng-template swiperSlide>\r\n      <ion-card [routerLink]=\"['/savings']\">\r\n        <ion-card-header class=\"ion-padding\">\r\n          <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n          <ion-card-subtitle class=\"ion-text-capitalize\">Savings</ion-card-subtitle>\r\n        </ion-card-header>\r\n      </ion-card>\r\n    </ng-template>\r\n\r\n    <ng-template swiperSlide>\r\n      <ion-card [routerLink]=\"['/reminder']\">\r\n        <ion-card-header class=\"ion-padding\">\r\n          <ion-icon name=\"notifications-circle-outline\"></ion-icon>\r\n          <ion-card-subtitle class=\"ion-text-capitalize\">Reminder</ion-card-subtitle>\r\n        </ion-card-header>\r\n      </ion-card>\r\n    </ng-template>\r\n\r\n    <ng-template swiperSlide>\r\n      <ion-card [routerLink]=\"['/goals']\">\r\n        <ion-card-header class=\"ion-padding\">\r\n          <ion-icon name=\"notifications-circle-outline\"></ion-icon>\r\n          <ion-card-subtitle class=\"ion-text-capitalize\">Goals</ion-card-subtitle>\r\n        </ion-card-header>\r\n      </ion-card>\r\n    </ng-template>\r\n\r\n  </swiper>\r\n\r\n  <ion-list class=\"latest-entries-list\">\r\n    <ion-item lines=\"none\">\r\n      <ion-label>\r\n        <b>Latest Entries</b>\r\n      </ion-label>\r\n      <ion-button slot=\"end\"\r\n        size=\"small\"\r\n        [routerLink]=\"['/entries-list']\">\r\n        <ion-icon name=\"ellipsis-horizontal-outline\"></ion-icon>\r\n      </ion-button>\r\n    </ion-item>\r\n\r\n    <ng-container *ngFor=\"let num of [].constructor(5)\">\r\n      <et-entries-view [name]=\"'Food'\"\r\n        [date]=\"'12/90/1990'\"\r\n        [paymentMethod]=\"'Google Pay'\">\r\n      </et-entries-view>\r\n    </ng-container>\r\n  </ion-list>\r\n\r\n  <ion-tabs>\r\n    <ion-tab-bar slot=\"bottom\">\r\n\r\n      <ion-tab-button size=\"large\">\r\n        <ion-icon name=\"home-outline\"></ion-icon>\r\n      </ion-tab-button>\r\n\r\n      <ion-tab-button size=\"large\">\r\n        <ion-icon name=\"stats-chart-outline\"></ion-icon>\r\n      </ion-tab-button>\r\n\r\n      <ion-tab-button></ion-tab-button>\r\n\r\n      <ion-tab-button size=\"large\">\r\n        <ion-icon name=\"calendar-clear-outline\"></ion-icon>\r\n      </ion-tab-button>\r\n\r\n      <ion-tab-button size=\"large\">\r\n        <ion-icon name=\"settings-outline\"></ion-icon>\r\n      </ion-tab-button>\r\n\r\n    </ion-tab-bar>\r\n  </ion-tabs>\r\n\r\n  <ion-fab vertical=\"bottom\"\r\n    horizontal=\"center\"\r\n    slot=\"fixed\"\r\n    [routerLink]=\"['/add-entries']\">\r\n    <ion-fab-button>\r\n      <ion-icon name=\"add\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "PageNotFoundPage",
            "id": "component-PageNotFoundPage-13d9f44e58efe75547f2b32aa72cf7e8ebd18301528a8fba17918a2488537be65e891e3526d9681fc5e61690f8d5e0d8559188eedd7bddfb8f5f32168d9c2c0f",
            "file": "src/app/auth/pages/page-not-found/page-not-found.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-page-not-found",
            "styleUrls": [
                "./page-not-found.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-page-not-found',\r\n  templateUrl: './page-not-found.page.html',\r\n  styleUrls: ['./page-not-found.page.scss'],\r\n})\r\nexport class PageNotFoundPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>page-not-found</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "ReminderPage",
            "id": "component-ReminderPage-8f7994042b281082c9e7538d3e2588e17b545a232db5775ebe54ff50a9f8d32af1e9be51f3b7355807af8158f26cbf552ca713efaa9cb2190cd905beab2b841a",
            "file": "src/app/pages/reminder/reminder.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-reminder",
            "styleUrls": [
                "./reminder.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reminder.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'et-reminder',\r\n    templateUrl: './reminder.page.html',\r\n    styleUrls: ['./reminder.page.scss'],\r\n})\r\nexport class ReminderPage implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./reminder.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>reminder</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content> </ion-content>\r\n"
        },
        {
            "name": "SavingsPage",
            "id": "component-SavingsPage-e7dd6da539137ea2b4ab722a0807191d431d09b7411ee3f903cf325122f51ba6313d708dd0832c87ae51721403232906c1c2ad32203e985721ca5bc47185e509",
            "file": "src/app/pages/savings/savings.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-savings",
            "styleUrls": [
                "./savings.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./savings.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'et-savings',\r\n    templateUrl: './savings.page.html',\r\n    styleUrls: ['./savings.page.scss'],\r\n})\r\nexport class SavingsPage implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./savings.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>savings</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "SignUpPage",
            "id": "component-SignUpPage-123814dc7625149ec99253753f478f540976a9704fa086a1ce35266759894c238b374250c730c384aab39c81fc7f810cc60d4a4483ee874f8382a2899a0daeb2",
            "file": "src/app/auth/pages/sign-up/sign-up.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-sign-up",
            "styleUrls": [
                "./sign-up.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'et-sign-up',\r\n  templateUrl: './sign-up.page.html',\r\n  styleUrls: ['./sign-up.page.scss'],\r\n})\r\nexport class SignUpPage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sign-up.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>sign-up</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n</ion-content>\r\n"
        },
        {
            "name": "WalkthroughPage",
            "id": "component-WalkthroughPage-1608da2150e211114478fe8147ac84a7e171b21ed226adb15c296e599c0939cd496a90ae003cabcf93daf71f77273a6a7b08d84e428551167728cf13b8dca811",
            "file": "src/app/auth/pages/walkthrough/walkthrough.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "et-walkthrough",
            "styleUrls": [
                "./walkthrough.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./walkthrough.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "swiper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SwiperComponent",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'swiper'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport SwiperCore, { Autoplay, Pagination } from 'swiper';\r\nimport { SwiperComponent } from 'swiper/angular';\r\nSwiperCore.use([Pagination, Autoplay]);\r\n\r\n@Component({\r\n  selector: 'et-walkthrough',\r\n  templateUrl: './walkthrough.page.html',\r\n  styleUrls: ['./walkthrough.page.scss'],\r\n})\r\nexport class WalkthroughPage implements OnInit {\r\n  @ViewChild('swiper') swiper!: SwiperComponent;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-header {\r\n  ion-toolbar {\r\n    --background: transparent;\r\n  }\r\n}\r\n\r\n.swiper {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.swiper-slide {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\nion-card {\r\n  box-shadow: none;\r\n\r\n  ion-img {\r\n    height: 150px;\r\n    object-fit: contain;\r\n  }\r\n\r\n  ion-card-title {\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  p {\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n",
                    "styleUrl": "./walkthrough.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <swiper [autoplay]=\"true\" [pagination]=\"true\" [loop]=\"true\">\r\n    <ng-template swiperSlide>\r\n      <ion-card>\r\n        <ion-card-header>\r\n          <ion-img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSc2oCtU1N2NxFf40X1FawnG9KBaz54fQ7vw&usqp=CAU\">\r\n          </ion-img>\r\n        </ion-card-header>\r\n        <ion-card-content class=\"ion-margin-top\">\r\n          <ion-card-title class=\"ion-margin-bottom\">Note Down Expenses</ion-card-title>\r\n          <p>Daily note your expenses to help manage money</p>\r\n        </ion-card-content>\r\n        <ion-item lines=\"none\">\r\n          <ion-button fill=\"clear\" slot=\"end\" color=\"medium\">Next</ion-button>\r\n        </ion-item>\r\n      </ion-card>\r\n\r\n    </ng-template>\r\n    <ng-template swiperSlide>\r\n      <ion-card>\r\n        <ion-card-header>\r\n          <ion-img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSc2oCtU1N2NxFf40X1FawnG9KBaz54fQ7vw&usqp=CAU\">\r\n          </ion-img>\r\n        </ion-card-header>\r\n        <ion-card-content class=\"ion-margin-top\">\r\n          <ion-card-title class=\"ion-margin-bottom\">Simple Money Management</ion-card-title>\r\n          <p>Get your notifications or alert when you do the over expenses</p>\r\n        </ion-card-content>\r\n        <ion-item lines=\"none\">\r\n          <ion-button fill=\"clear\" slot=\"end\" color=\"medium\">Next</ion-button>\r\n        </ion-item>\r\n      </ion-card>\r\n    </ng-template>\r\n    <ng-template swiperSlide>\r\n      <ion-card>\r\n        <ion-card-header>\r\n          <ion-img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSSc2oCtU1N2NxFf40X1FawnG9KBaz54fQ7vw&usqp=CAU\">\r\n          </ion-img>\r\n        </ion-card-header>\r\n        <ion-card-content class=\"ion-margin-top\">\r\n          <ion-card-title class=\"ion-margin-bottom\">Easy to Track and Analize</ion-card-title>\r\n          <p>Tracking your expense help make sure you don't overspend</p>\r\n        </ion-card-content>\r\n\r\n        <!-- <ion-item lines=\"none\"> -->\r\n        <ion-button expand=\"block\" [routerLink]=\"['/auth/login']\">Get Started > </ion-button>\r\n        <!-- </ion-item> -->\r\n      </ion-card>\r\n    </ng-template>\r\n  </swiper>\r\n</ion-content>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AccessDeniedPageModule",
            "id": "module-AccessDeniedPageModule-eb0ee4ccc6fd36612255cc891d497c0fdbc6a017a97962d169a72dc1595fbb2be15cf91b869f9788d88303456829dfe0d0221e8e1e1393252fcfdbe772ea2d7b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/pages/access-denied/access-denied.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { AccessDeniedPage } from './access-denied.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccessDeniedPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AccessDeniedPage]\r\n})\r\nexport class AccessDeniedPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccessDeniedPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AddEntriesPageModule",
            "id": "module-AddEntriesPageModule-ec4a84fe925c5a9955e1f56bfefdb494e956c921cda38e630a8fe6827fc01599445f23dd6453b9a73cd26fa64237d1a8847d840fb68275f2a08ac6e399fb9561",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/entries/add-entries/add-entries.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { EntriesViewComponentModule } from 'src/app/shared/components/entries-view/entries-view.module';\r\nimport { AddExpenseModule } from '../add-expense/add-expense.module';\r\nimport { AddGoalPageModule } from '../add-goal/add-goal.module';\r\nimport { AddIncomeModule } from './../add-income/add-income.module';\r\nimport { AddEntriesPage } from './add-entries.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddEntriesPage\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    EntriesViewComponentModule,\r\n    AddExpenseModule,\r\n    AddGoalPageModule,\r\n    AddIncomeModule\r\n  ],\r\n  declarations: [\r\n    AddEntriesPage,\r\n  ],\r\n})\r\nexport class AddEntriesPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddEntriesPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AddExpenseModule"
                        },
                        {
                            "name": "AddGoalPageModule"
                        },
                        {
                            "name": "AddIncomeModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AddExpenseModule",
            "id": "module-AddExpenseModule-993447d7fdb81f75718c6f4879c604b121bd60d08abf2115d7868e6c83495c4def4b0d820aac6753b6c81a2879082199f9096a48042aaf038c1ed1cde6c01a53",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/entries/add-expense/add-expense.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { AddExpensePage } from './add-expense.page';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddExpensePage],\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [AddExpensePage]\r\n})\r\nexport class AddExpenseModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddExpensePage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AddExpensePage"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AddGoalPageModule",
            "id": "module-AddGoalPageModule-38a24f68940ac306f248ffefc25e72c6bb368a6cb9ddb535f83fce8b3cfd2ad7ddaccbe2d0d916239769d12527f397271a30f807c1060df6abc54c0ca44bf9ae",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/entries/add-goal/add-goal.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { AddGoalPage } from './add-goal.page';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [AddGoalPage],\r\n  exports: [AddGoalPage]\r\n})\r\nexport class AddGoalPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddGoalPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AddGoalPage"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AddIncomeModule",
            "id": "module-AddIncomeModule-5fc39c3a8fd921e694d94136e8511151efcc3708329bcd368a9a951c3575a1a008764b4946869e3a35c60adb06154180b208bd1c375154950485dfd3905cdb52",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/entries/add-income/add-income.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { AddIncomePage } from './add-income.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [AddIncomePage],\r\n  exports: [AddIncomePage],\r\n})\r\nexport class AddIncomeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddIncomePage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AddIncomePage"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-385548c1577af88a0d94ff7fc0cd24fe809f9fb7d33de596a578906822227a17b3c81f7ea8fd9a1c6dd02cb77a61a7ee7a403666970a96d552e9e5f0f51e5a0f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\r\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    IonicModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireStorageModule,\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n  ],\r\n  providers: [\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-880c8fc4edd7d2ed98a23d7dd223e53cc56a647633e1d422fe326dff9060a6156b4f6508c52b14efbd13c3296d1b10755592f29d6e8ef047533dcf42cd1b515c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { AngularFireAuthGuard } from '@angular/fire/compat/auth-guard';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { AppResolver } from './app.resolver';\r\nimport { redirectUnauthorizedToLogin } from './auth/auth.guards';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthPageModule)\",\r\n  },\r\n  {\r\n    path: 'home',\r\n    loadChildren: () => \"import('./home/home.module').then((m) => m.HomePageModule)\",\r\n  },\r\n  {\r\n    path: '',\r\n    resolve: {\r\n      appResolver: AppResolver\r\n    },\r\n    children: [\r\n      {\r\n        path: 'expense',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/expense/expense.module').then((m) => m.ExpensePageModule)\",\r\n      },\r\n      {\r\n        path: 'savings',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/savings/savings.module').then((m) => m.SavingsPageModule)\",\r\n      },\r\n      {\r\n        path: 'reminder',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/reminder/reminder.module').then((m) => m.ReminderPageModule)\",\r\n      },\r\n      {\r\n        path: 'income',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/income/income.module').then((m) => m.IncomePageModule)\",\r\n      },\r\n      {\r\n        path: 'overview',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/overview/overview.module').then((m) => m.OverviewPageModule)\",\r\n      },\r\n      {\r\n        path: 'entries-list',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/entries/entries-list/entries-list.module').then((m) => m.EntriesListPageModule)\",\r\n      },\r\n      {\r\n        path: 'add-entries',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/entries/add-entries/add-entries.module').then((m) => m.AddEntriesPageModule)\",\r\n      },\r\n      {\r\n        path: 'goals',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: {\r\n          authGuardPipe: redirectUnauthorizedToLogin,\r\n        },\r\n        loadChildren: () => \"import('./pages/goals/goals.module').then((m) => m.GoalsPageModule)\",\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthPageModule",
            "id": "module-AuthPageModule-21082efb88ca16d7ea406670a643cae8025e64f49405e45807377e0d78c48d2d3196d58a3016bdf0825069db59d7d0fef36708f2f4ec17a19701a56e482a76fc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { AngularFireAuthGuard } from '@angular/fire/compat/auth-guard';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { redirectLoggedInToOverview } from './auth.guards';\r\nimport { AuthPage } from './auth.page';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: 'walkthrough',\r\n    canActivate: [AngularFireAuthGuard],\r\n    data: {\r\n      authGuardPipe: redirectLoggedInToOverview\r\n    },\r\n    loadChildren: () => \"import('./pages/walkthrough/walkthrough.module').then((m) => m.WalkthroughPageModule)\",\r\n  },\r\n  {\r\n    path: 'login',\r\n    canActivate: [AngularFireAuthGuard],\r\n    data: {\r\n      authGuardPipe: redirectLoggedInToOverview\r\n    },\r\n    loadChildren: () => \"import('./pages/login/login.module').then((m) => m.LoginPageModule)\",\r\n  },\r\n  {\r\n    path: 'logout',\r\n    loadChildren: () => \"import('./pages/Logout/Logout.module').then((m) => m.LogoutPageModule)\",\r\n  },\r\n  {\r\n    path: 'forgot-password', canActivate: [AngularFireAuthGuard],\r\n    data: {\r\n      authGuardPipe: redirectLoggedInToOverview\r\n    },\r\n    loadChildren: () => \"import('./pages/forgot-password/forgot-password.module').then(m => m.ForgotPasswordPageModule)\"\r\n  },\r\n  {\r\n    path: 'sign-up',\r\n    canActivate: [AngularFireAuthGuard],\r\n    data: {\r\n      authGuardPipe: redirectLoggedInToOverview\r\n    },\r\n    loadChildren: () => \"import('./pages/sign-up/sign-up.module').then(m => m.SignUpPageModule)\"\r\n  },\r\n  {\r\n    path: 'access-denied',\r\n    loadChildren: () => \"import('./pages/access-denied/access-denied.module').then(m => m.AccessDeniedPageModule)\"\r\n  },\r\n  {\r\n    path: 'page-not-found',\r\n    loadChildren: () => \"import('./pages/page-not-found/page-not-found.module').then(m => m.PageNotFoundPageModule)\"\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AuthPage]\r\n})\r\nexport class AuthPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DatePickerPageModule",
            "id": "module-DatePickerPageModule-06b6b3e1a871a1d1a1cd3d3225febef7b4386916823ceeaaaae74bc3ce364a3713eec58efba62b414e303bc2a92daf7c95be1c96827e8d81645c757e914dac95",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/components/date-picker/date-picker.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { DatePickerComponent } from './date-picker.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [DatePickerComponent],\r\n  exports: [DatePickerComponent]\r\n})\r\nexport class DatePickerPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DatePickerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DatePickerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EntriesListPageModule",
            "id": "module-EntriesListPageModule-9effdf7eae70e75b5659fce45ff6f7286092bee72f2bf2a115a912bd97f553135fe211ceb5d7e7a7dc554c3074aff8a06026bba5edbf8998466d5e0e9e0841e2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/entries/entries-list/entries-list.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { EntriesViewComponentModule } from 'src/app/shared/components/entries-view/entries-view.module';\r\nimport { EntriesListPage } from './entries-list.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EntriesListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    EntriesViewComponentModule\r\n  ],\r\n  declarations: [EntriesListPage]\r\n})\r\nexport class EntriesListPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EntriesListPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EntriesViewComponentModule",
            "id": "module-EntriesViewComponentModule-abaad214f267d08e405a8a899b1875067e328c83d95baf209442078b6306a632efb58b9ccc71ba80a58d55831d401e7e8047ced4f1d5dea927b116a8a132b49e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/components/entries-view/entries-view.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { EntriesViewComponent } from './entries-view.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, IonicModule],\r\n  declarations: [EntriesViewComponent],\r\n  exports: [EntriesViewComponent]\r\n})\r\nexport class EntriesViewComponentModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EntriesViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EntriesViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ExpensePageModule",
            "id": "module-ExpensePageModule-cef94dc6b9cd989dba2e97e30c2c6184137bada468028ae1586e8ba7c24563a81a309d94d10ccae3dd083f03ee4a7f0e28d74c4322520e5ee1112204aeac223c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/expense/expense.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { ExpensePage } from './expense.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ExpensePage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts')\r\n    })\r\n  ],\r\n  declarations: [ExpensePage],\r\n})\r\nexport class ExpensePageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExpensePage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ForgotPasswordPageModule",
            "id": "module-ForgotPasswordPageModule-9d5652933f0e3e1f7f6f88607eb3ec79bc6090b87886fbbed1273b044dbe720e14e69b3be677e8c045d743550b5476af6171b6ca369bc8a6d63718695666f192",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/pages/forgot-password/forgot-password.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ForgotPasswordPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GoalsPageModule",
            "id": "module-GoalsPageModule-fbd28973bbc54c0c40d26bad02d534b8d7b27c91239c40d2cb1417ef9569a0a1e22814b4ce89f46db253efe9f3fff3a37f6313a0575747eb18d39dae88f03df6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/goals/goals.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { GoalsPage } from './goals.page';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GoalsPage\r\n  },\r\n  {\r\n    path: 'add-goal',\r\n    loadChildren: () =>\r\n      \"import('../entries/add-goal/add-goal.module').then((m) => m.AddGoalPageModule)\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [GoalsPage]\r\n})\r\nexport class GoalsPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GoalsPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomePageModule",
            "id": "module-HomePageModule-cd34a2c37af33a694101df60caaec7780ac56c3bdfa6bafc7048ac39fd6fc9db997dcbdec3e2f4c02fa899cd2e23133a66adc48e17c69aee99ccdd3b0df771be",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SwiperModule } from 'swiper/angular';\r\nimport { HomePage } from './home.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomePage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    SwiperModule,\r\n  ],\r\n  declarations: [HomePage],\r\n})\r\nexport class HomePageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomePage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IncomePageModule",
            "id": "module-IncomePageModule-eb9b911c656d01ca50f16b2bea216b9c7575603de18779db7729ac14ba2e76393afd2c01eaa23f96a6bb5afee5b51d2e7043cc014342db609ecda5d40981d5b8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/income/income.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { IncomePage } from './income.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IncomePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [IncomePage]\r\n})\r\nexport class IncomePageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IncomePage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginPageModule",
            "id": "module-LoginPageModule-90e1c8c80eeb922b768d45ed23386e5a90479aa8db93ad1c4c44d3fbc9ada9040e709227b990ff261371dbcce471ab62f1bb2e18991e689b2fe9b5455fa1ad29",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/pages/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LogoutPageModule",
            "id": "module-LogoutPageModule-b3a1afb8e87384c84ca65a19f58c018e0a68edd93bccb3870f81d9d93a237a21801956af20a8febd418638b5f7bca37345b678f1c5fb13e921cd4d4c0a41061a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/pages/logout/logout.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Route, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { LogoutPage } from './logout.page';\r\n\r\nconst routes: Route[] = [\r\n  {\r\n    path: '',\r\n    component: LogoutPage\r\n  }\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LogoutPage]\r\n})\r\nexport class LogoutPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LogoutPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OverviewPageModule",
            "id": "module-OverviewPageModule-8d305b25174b4c4c9c97c8ec6be4102558a32b02e8ee1cce656a8ed61b01146e73738278c8cc95fc955c42edf1b0fed6663cb5b156e381707525811ccbdf8aa9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/overview/overview.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { EntriesViewComponentModule } from 'src/app/shared/components/entries-view/entries-view.module';\r\nimport { SwiperModule } from 'swiper/angular';\r\nimport { OverviewPage } from './overview.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OverviewPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SwiperModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes),\r\n    EntriesViewComponentModule\r\n  ],\r\n  declarations: [OverviewPage],\r\n})\r\nexport class OverviewPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OverviewPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PageNotFoundPageModule",
            "id": "module-PageNotFoundPageModule-b811baa9d14dad0f5508bb905161ce739d165fcacf8563aa57074023f91ff54477344c01be3fe9b0c28826185c345f2c540306633f74e8b7ebf32686942b6dd9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/pages/page-not-found/page-not-found.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { PageNotFoundPage } from './page-not-found.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PageNotFoundPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PageNotFoundPage]\r\n})\r\nexport class PageNotFoundPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PageNotFoundPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReminderPageModule",
            "id": "module-ReminderPageModule-b9b25583b353671b5ce90e102db436bb6cc3a44fc8fe79bdc4421a911596ccb9e20f58219af84359c1fcc558c70a8752b2d3028147b2c654ad0e754e6c652a01",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/reminder/reminder.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ReminderPage } from './reminder.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReminderPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ReminderPage]\r\n})\r\nexport class ReminderPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReminderPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SavingsPageModule",
            "id": "module-SavingsPageModule-a4f7fc9f07a6ea378eb370cee833e50b4afb1880c215bbe6d1eee3db115c55f383b29bc838836bde9a88b1d135c335b6b559fc037df5581013f586325c128c6d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/savings/savings.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SavingsPage } from './savings.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SavingsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SavingsPage]\r\n})\r\nexport class SavingsPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SavingsPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SignUpPageModule",
            "id": "module-SignUpPageModule-a841d622dfdb9328368508487e8341a160b23bbd4f504c5e3e4dde1916ac53814c12a8ed8782226b11280d54ab9d2caf69782820bc9b8e42870d7840e5285c81",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/pages/sign-up/sign-up.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SignUpPage } from './sign-up.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignUpPage\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SignUpPage]\r\n})\r\nexport class SignUpPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SignUpPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WalkthroughPageModule",
            "id": "module-WalkthroughPageModule-868ae60e109e8b95ec7146d684bd6f52b9ce20d7cab99f09ab7da9a6aa49fb083ad26d4e19719f637bf970876f941db9dbe2a20220e6524e645c276da8ec96f9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/pages/walkthrough/walkthrough.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SwiperModule } from 'swiper/angular';\r\nimport { WalkthroughPage } from './walkthrough.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WalkthroughPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    SwiperModule,\r\n  ],\r\n  declarations: [WalkthroughPage],\r\n})\r\nexport class WalkthroughPageModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "WalkthroughPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "appPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/firepath.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'app'"
            },
            {
                "name": "CoolTheme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/expense/expense.page.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  color: [\r\n    '#b21ab4',\r\n    '#6f0099',\r\n    '#2a2073',\r\n    '#0b5ea8',\r\n    '#17aecc',\r\n    '#b3b3ff',\r\n    '#eb99ff',\r\n    '#fae6ff',\r\n    '#e6f2ff',\r\n    '#eeeeee'\r\n  ],\r\n\r\n  title: {\r\n    textStyle: {\r\n      fontWeight: 'normal',\r\n      color: '#00aecd'\r\n    }\r\n  },\r\n\r\n  visualMap: {\r\n    color: ['#00aecd', '#a2d4e6']\r\n  },\r\n\r\n  toolbox: {\r\n    color: ['#00aecd', '#00aecd', '#00aecd', '#00aecd']\r\n  },\r\n\r\n  tooltip: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    axisPointer: {\r\n      // Axis indicator, coordinate trigger effective\r\n      type: 'line', // The default is a straight line： 'line' | 'shadow'\r\n      lineStyle: {\r\n        // Straight line indicator style settings\r\n        color: '#00aecd',\r\n        type: 'dashed'\r\n      },\r\n      crossStyle: {\r\n        color: '#00aecd'\r\n      },\r\n      shadowStyle: {\r\n        // Shadow indicator style settings\r\n        color: 'rgba(200,200,200,0.3)'\r\n      }\r\n    }\r\n  },\r\n\r\n  // Area scaling controller\r\n  dataZoom: {\r\n    dataBackgroundColor: '#eee', // Data background color\r\n    fillerColor: 'rgba(144,197,237,0.2)', // Fill the color\r\n    handleColor: '#00aecd' // Handle color\r\n  },\r\n\r\n  timeline: {\r\n    lineStyle: {\r\n      color: '#00aecd'\r\n    },\r\n    controlStyle: {\r\n      color: '#00aecd',\r\n      borderColor: '00aecd'\r\n    }\r\n  },\r\n\r\n  candlestick: {\r\n    itemStyle: {\r\n      color: '#00aecd',\r\n      color0: '#a2d4e6'\r\n    },\r\n    lineStyle: {\r\n      width: 1,\r\n      color: '#00aecd',\r\n      color0: '#a2d4e6'\r\n    },\r\n    areaStyle: {\r\n      color: '#b21ab4',\r\n      color0: '#0b5ea8'\r\n    }\r\n  },\r\n\r\n  chord: {\r\n    padding: 4,\r\n    itemStyle: {\r\n      color: '#b21ab4',\r\n      borderWidth: 1,\r\n      borderColor: 'rgba(128, 128, 128, 0.5)'\r\n    },\r\n    lineStyle: {\r\n      color: 'rgba(128, 128, 128, 0.5)'\r\n    },\r\n    areaStyle: {\r\n      color: '#0b5ea8'\r\n    }\r\n  },\r\n\r\n  graph: {\r\n    itemStyle: {\r\n      color: '#b21ab4'\r\n    },\r\n    linkStyle: {\r\n      color: '#2a2073'\r\n    }\r\n  },\r\n\r\n  map: {\r\n    itemStyle: {\r\n      color: '#c12e34'\r\n    },\r\n    areaStyle: {\r\n      color: '#ddd'\r\n    },\r\n    label: {\r\n      color: '#c12e34'\r\n    }\r\n  },\r\n\r\n  gauge: {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: [\r\n          [0.2, '#dddddd'],\r\n          [0.8, '#00aecd'],\r\n          [1, '#f5ccff']\r\n        ],\r\n        width: 8\r\n      }\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "datePicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "entriesView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/entries-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'expense-tracker-app-bf2ba',\r\n    appId: '1:792008958304:web:3cea14c4168db2158cfe05',\r\n    storageBucket: 'expense-tracker-app-bf2ba.appspot.com',\r\n    apiKey: 'AIzaSyAH8dCLL4_oTP4N8nEgLvy-6oAmM-OkVfM',\r\n    authDomain: 'expense-tracker-app-bf2ba.firebaseapp.com',\r\n    messagingSenderId: '792008958304',\r\n    measurementId: 'G-G55GZ584TW',\r\n  },\r\n  useEmulators: false,\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'expense-tracker-app-bf2ba',\r\n    appId: '1:792008958304:web:3cea14c4168db2158cfe05',\r\n    storageBucket: 'expense-tracker-app-bf2ba.appspot.com',\r\n    apiKey: 'AIzaSyAH8dCLL4_oTP4N8nEgLvy-6oAmM-OkVfM',\r\n    authDomain: 'expense-tracker-app-bf2ba.firebaseapp.com',\r\n    messagingSenderId: '792008958304',\r\n    measurementId: 'G-G55GZ584TW',\r\n  },\r\n  useEmulators: true,\r\n  production: false\r\n}"
            },
            {
                "name": "expensePath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/firepath.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'expense'"
            },
            {
                "name": "goalsPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/firepath.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'goals'"
            },
            {
                "name": "incomePath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/constants/firepath.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'income'"
            },
            {
                "name": "redirectLoggedInToOverview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.guards.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => redirectLoggedInTo(['overview'])"
            },
            {
                "name": "redirectUnauthorizedToLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.guards.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => redirectUnauthorizedTo(['/auth/login'])"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/pages/logout/logout.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Route[]",
                "defaultValue": "[\r\n  {\r\n    path: '',\r\n    component: LogoutPage\r\n  }\r\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DatePickerComponent>",
                "defaultValue": "(args: DatePickerComponent) => ({\r\n  component: DatePickerComponent,\r\n  props: {\r\n    ...args,\r\n    entryClicked: linkTo('Button')\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/entries-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<EntriesViewComponent>",
                "defaultValue": "(args: EntriesViewComponent) => ({\r\n  component: EntriesViewComponent,\r\n  props: {\r\n    ...args,\r\n    entryClicked: linkTo('Date Picker')\r\n  }\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/constants/firepath.constant.ts": [
                {
                    "name": "appPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/firepath.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'app'"
                },
                {
                    "name": "expensePath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/firepath.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'expense'"
                },
                {
                    "name": "goalsPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/firepath.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'goals'"
                },
                {
                    "name": "incomePath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/constants/firepath.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'income'"
                }
            ],
            "src/app/pages/expense/expense.page.ts": [
                {
                    "name": "CoolTheme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/expense/expense.page.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  color: [\r\n    '#b21ab4',\r\n    '#6f0099',\r\n    '#2a2073',\r\n    '#0b5ea8',\r\n    '#17aecc',\r\n    '#b3b3ff',\r\n    '#eb99ff',\r\n    '#fae6ff',\r\n    '#e6f2ff',\r\n    '#eeeeee'\r\n  ],\r\n\r\n  title: {\r\n    textStyle: {\r\n      fontWeight: 'normal',\r\n      color: '#00aecd'\r\n    }\r\n  },\r\n\r\n  visualMap: {\r\n    color: ['#00aecd', '#a2d4e6']\r\n  },\r\n\r\n  toolbox: {\r\n    color: ['#00aecd', '#00aecd', '#00aecd', '#00aecd']\r\n  },\r\n\r\n  tooltip: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    axisPointer: {\r\n      // Axis indicator, coordinate trigger effective\r\n      type: 'line', // The default is a straight line： 'line' | 'shadow'\r\n      lineStyle: {\r\n        // Straight line indicator style settings\r\n        color: '#00aecd',\r\n        type: 'dashed'\r\n      },\r\n      crossStyle: {\r\n        color: '#00aecd'\r\n      },\r\n      shadowStyle: {\r\n        // Shadow indicator style settings\r\n        color: 'rgba(200,200,200,0.3)'\r\n      }\r\n    }\r\n  },\r\n\r\n  // Area scaling controller\r\n  dataZoom: {\r\n    dataBackgroundColor: '#eee', // Data background color\r\n    fillerColor: 'rgba(144,197,237,0.2)', // Fill the color\r\n    handleColor: '#00aecd' // Handle color\r\n  },\r\n\r\n  timeline: {\r\n    lineStyle: {\r\n      color: '#00aecd'\r\n    },\r\n    controlStyle: {\r\n      color: '#00aecd',\r\n      borderColor: '00aecd'\r\n    }\r\n  },\r\n\r\n  candlestick: {\r\n    itemStyle: {\r\n      color: '#00aecd',\r\n      color0: '#a2d4e6'\r\n    },\r\n    lineStyle: {\r\n      width: 1,\r\n      color: '#00aecd',\r\n      color0: '#a2d4e6'\r\n    },\r\n    areaStyle: {\r\n      color: '#b21ab4',\r\n      color0: '#0b5ea8'\r\n    }\r\n  },\r\n\r\n  chord: {\r\n    padding: 4,\r\n    itemStyle: {\r\n      color: '#b21ab4',\r\n      borderWidth: 1,\r\n      borderColor: 'rgba(128, 128, 128, 0.5)'\r\n    },\r\n    lineStyle: {\r\n      color: 'rgba(128, 128, 128, 0.5)'\r\n    },\r\n    areaStyle: {\r\n      color: '#0b5ea8'\r\n    }\r\n  },\r\n\r\n  graph: {\r\n    itemStyle: {\r\n      color: '#b21ab4'\r\n    },\r\n    linkStyle: {\r\n      color: '#2a2073'\r\n    }\r\n  },\r\n\r\n  map: {\r\n    itemStyle: {\r\n      color: '#c12e34'\r\n    },\r\n    areaStyle: {\r\n      color: '#ddd'\r\n    },\r\n    label: {\r\n      color: '#c12e34'\r\n    }\r\n  },\r\n\r\n  gauge: {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: [\r\n          [0.2, '#dddddd'],\r\n          [0.8, '#00aecd'],\r\n          [1, '#f5ccff']\r\n        ],\r\n        width: 8\r\n      }\r\n    }\r\n  }\r\n}"
                }
            ],
            "src/stories/date-picker.stories.ts": [
                {
                    "name": "datePicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DatePickerComponent>",
                    "defaultValue": "(args: DatePickerComponent) => ({\r\n  component: DatePickerComponent,\r\n  props: {\r\n    ...args,\r\n    entryClicked: linkTo('Button')\r\n  },\r\n})"
                }
            ],
            "src/stories/entries-list.stories.ts": [
                {
                    "name": "entriesView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/entries-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/entries-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<EntriesViewComponent>",
                    "defaultValue": "(args: EntriesViewComponent) => ({\r\n  component: EntriesViewComponent,\r\n  props: {\r\n    ...args,\r\n    entryClicked: linkTo('Date Picker')\r\n  }\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'expense-tracker-app-bf2ba',\r\n    appId: '1:792008958304:web:3cea14c4168db2158cfe05',\r\n    storageBucket: 'expense-tracker-app-bf2ba.appspot.com',\r\n    apiKey: 'AIzaSyAH8dCLL4_oTP4N8nEgLvy-6oAmM-OkVfM',\r\n    authDomain: 'expense-tracker-app-bf2ba.firebaseapp.com',\r\n    messagingSenderId: '792008958304',\r\n    measurementId: 'G-G55GZ584TW',\r\n  },\r\n  useEmulators: false,\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'expense-tracker-app-bf2ba',\r\n    appId: '1:792008958304:web:3cea14c4168db2158cfe05',\r\n    storageBucket: 'expense-tracker-app-bf2ba.appspot.com',\r\n    apiKey: 'AIzaSyAH8dCLL4_oTP4N8nEgLvy-6oAmM-OkVfM',\r\n    authDomain: 'expense-tracker-app-bf2ba.firebaseapp.com',\r\n    messagingSenderId: '792008958304',\r\n    measurementId: 'G-G55GZ584TW',\r\n  },\r\n  useEmulators: true,\r\n  production: false\r\n}"
                }
            ],
            "src/app/auth/auth.guards.ts": [
                {
                    "name": "redirectLoggedInToOverview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.guards.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => redirectLoggedInTo(['overview'])"
                },
                {
                    "name": "redirectUnauthorizedToLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.guards.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => redirectUnauthorizedTo(['/auth/login'])"
                }
            ],
            "src/app/auth/pages/logout/logout.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/pages/logout/logout.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Route[]",
                    "defaultValue": "[\r\n  {\r\n    path: '',\r\n    component: LogoutPage\r\n  }\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./auth/auth.module#AuthPageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth.module.ts",
                                        "module": "AuthPageModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "pathMatch": "full",
                                                "redirectTo": "login"
                                            },
                                            {
                                                "path": "walkthrough",
                                                "canActivate": [
                                                    "AngularFireAuthGuard"
                                                ],
                                                "data": {
                                                    "authGuardPipe": "redirectLoggedInToOverview"
                                                },
                                                "loadChildren": "./pages/walkthrough/walkthrough.module#WalkthroughPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/auth/pages/walkthrough/walkthrough.module.ts",
                                                                "module": "WalkthroughPageModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "WalkthroughPage"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "WalkthroughPageModule"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "login",
                                                "canActivate": [
                                                    "AngularFireAuthGuard"
                                                ],
                                                "data": {
                                                    "authGuardPipe": "redirectLoggedInToOverview"
                                                },
                                                "loadChildren": "./pages/login/login.module#LoginPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/auth/pages/login/login.module.ts",
                                                                "module": "LoginPageModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "LoginPage"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "LoginPageModule"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "logout",
                                                "loadChildren": "./pages/Logout/Logout.module#LogoutPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [],
                                                        "module": "LogoutPageModule"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "forgot-password",
                                                "canActivate": [
                                                    "AngularFireAuthGuard"
                                                ],
                                                "data": {
                                                    "authGuardPipe": "redirectLoggedInToOverview"
                                                },
                                                "loadChildren": "./pages/forgot-password/forgot-password.module#ForgotPasswordPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/auth/pages/forgot-password/forgot-password.module.ts",
                                                                "module": "ForgotPasswordPageModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "ForgotPasswordPage"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "ForgotPasswordPageModule"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "sign-up",
                                                "canActivate": [
                                                    "AngularFireAuthGuard"
                                                ],
                                                "data": {
                                                    "authGuardPipe": "redirectLoggedInToOverview"
                                                },
                                                "loadChildren": "./pages/sign-up/sign-up.module#SignUpPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/auth/pages/sign-up/sign-up.module.ts",
                                                                "module": "SignUpPageModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "SignUpPage"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "SignUpPageModule"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "access-denied",
                                                "loadChildren": "./pages/access-denied/access-denied.module#AccessDeniedPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/auth/pages/access-denied/access-denied.module.ts",
                                                                "module": "AccessDeniedPageModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "AccessDeniedPage"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "AccessDeniedPageModule"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "page-not-found",
                                                "loadChildren": "./pages/page-not-found/page-not-found.module#PageNotFoundPageModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/auth/pages/page-not-found/page-not-found.module.ts",
                                                                "module": "PageNotFoundPageModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "PageNotFoundPage"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "PageNotFoundPageModule"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthPageModule"
                            }
                        ]
                    },
                    {
                        "path": "home",
                        "loadChildren": "./home/home.module#HomePageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/home/home.module.ts",
                                        "module": "HomePageModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "HomePage"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HomePageModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "resolve": {
                            "appResolver": "AppResolver"
                        },
                        "children": [
                            {
                                "path": "expense",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/expense/expense.module#ExpensePageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/pages/expense/expense.module.ts",
                                                "module": "ExpensePageModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "ExpensePage"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "ExpensePageModule"
                                    }
                                ]
                            },
                            {
                                "path": "savings",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/savings/savings.module#SavingsPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/pages/savings/savings.module.ts",
                                                "module": "SavingsPageModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "SavingsPage"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "SavingsPageModule"
                                    }
                                ]
                            },
                            {
                                "path": "reminder",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/reminder/reminder.module#ReminderPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/pages/reminder/reminder.module.ts",
                                                "module": "ReminderPageModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "ReminderPage"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "ReminderPageModule"
                                    }
                                ]
                            },
                            {
                                "path": "income",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/income/income.module#IncomePageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/pages/income/income.module.ts",
                                                "module": "IncomePageModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "IncomePage"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "IncomePageModule"
                                    }
                                ]
                            },
                            {
                                "path": "overview",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/overview/overview.module#OverviewPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [],
                                        "module": "OverviewPageModule"
                                    }
                                ]
                            },
                            {
                                "path": "entries-list",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/entries/entries-list/entries-list.module#EntriesListPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/pages/entries/entries-list/entries-list.module.ts",
                                                "module": "EntriesListPageModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "EntriesListPage"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "EntriesListPageModule"
                                    }
                                ]
                            },
                            {
                                "path": "add-entries",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/entries/add-entries/add-entries.module#AddEntriesPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [],
                                        "module": "AddEntriesPageModule"
                                    }
                                ]
                            },
                            {
                                "path": "goals",
                                "canActivate": [
                                    "AngularFireAuthGuard"
                                ],
                                "data": {
                                    "authGuardPipe": "redirectUnauthorizedToLogin"
                                },
                                "loadChildren": "./pages/goals/goals.module#GoalsPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/pages/goals/goals.module.ts",
                                                "module": "GoalsPageModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "GoalsPage"
                                                    },
                                                    {
                                                        "path": "add-goal",
                                                        "loadChildren": "../entries/add-goal/add-goal.module#AddGoalPageModule"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "GoalsPageModule"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AppResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guards.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectLoggedInToOverview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guards.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectUnauthorizedToLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthPage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/access-denied/access-denied.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccessDeniedPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/forgot-password/forgot-password.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgotPasswordPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/login/login.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/logout/logout.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/logout/logout.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoutPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/page-not-found/page-not-found.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/sign-up/sign-up.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/walkthrough/walkthrough.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "WalkthroughPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/entries/add-entries/add-entries.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddEntriesPage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/entries/add-expense/add-expense.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddExpensePage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/entries/add-goal/add-goal.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddGoalPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/entries/add-income/add-income.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddIncomePage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/entries/entries-list/entries-list.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntriesListPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/expense/expense.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpensePage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/expense/expense.page.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CoolTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/goals/goals.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "GoalsPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/income/income.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "IncomePage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/overview/overview.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverviewPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/reminder/reminder.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReminderPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/savings/savings.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "SavingsPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/entries-view/entries-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntriesViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/firepath.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/firepath.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "expensePath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/firepath.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "goalsPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/constants/firepath.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "incomePath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/firestorage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FirestorageService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/firestore.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FirestoreService",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datePicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/entries-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "entriesView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/entries-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}